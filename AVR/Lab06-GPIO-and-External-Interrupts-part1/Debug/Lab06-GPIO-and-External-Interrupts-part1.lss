
Lab06-GPIO-and-External-Interrupts-part1.elf: formato do arquivo elf32-avr

Seções:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000560  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000050c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         0000066c  00000000  00000000  00000560  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000d34  00000000  00000000  00000bcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001900  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001914  2**2
                  CONTENTS, READONLY
  6 .debug_info   00000bbc  00000000  00000000  00001954  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b1a  00000000  00000000  00002510  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  0000302a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e6  00000000  00000000  00003044  2**0
                  CONTENTS, READONLY, DEBUGGING

Desmontagem da seção .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	30 c1       	rjmp	.+608    	; 0x276 <__vector_5>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	ba d0       	rcall	.+372    	; 0x26a <main>
  f6:	08 c2       	rjmp	.+1040   	; 0x508 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <_Z5setupv>:

#include <avr/io.h>
#include <avr/interrupt.h>
#include <util/delay.h>

void setup(){
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	cd b7       	in	r28, 0x3d	; 61
 100:	de b7       	in	r29, 0x3e	; 62
	DDRH |=  (1 << PH6); // LED   - Pino 9 - Escreve 1 - Saída
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	91 e0       	ldi	r25, 0x01	; 1
 106:	21 e0       	ldi	r18, 0x01	; 1
 108:	31 e0       	ldi	r19, 0x01	; 1
 10a:	f9 01       	movw	r30, r18
 10c:	20 81       	ld	r18, Z
 10e:	20 64       	ori	r18, 0x40	; 64
 110:	fc 01       	movw	r30, r24
 112:	20 83       	st	Z, r18
	DDRE &= ~(1 << PE4); // Botão - Pino 2 - Escreve 0 - Entrada
 114:	8d e2       	ldi	r24, 0x2D	; 45
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	2d e2       	ldi	r18, 0x2D	; 45
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	f9 01       	movw	r30, r18
 11e:	20 81       	ld	r18, Z
 120:	2f 7e       	andi	r18, 0xEF	; 239
 122:	fc 01       	movw	r30, r24
 124:	20 83       	st	Z, r18

	EICRB |= (1<<ISC41) | (1<<ISC40); // Habilita interrupção na borda de subida
 126:	8a e6       	ldi	r24, 0x6A	; 106
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	2a e6       	ldi	r18, 0x6A	; 106
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	f9 01       	movw	r30, r18
 130:	20 81       	ld	r18, Z
 132:	23 60       	ori	r18, 0x03	; 3
 134:	fc 01       	movw	r30, r24
 136:	20 83       	st	Z, r18
	EIMSK = (1<<INT4);                // Interrupção INT4
 138:	8d e3       	ldi	r24, 0x3D	; 61
 13a:	90 e0       	ldi	r25, 0x00	; 0
 13c:	20 e1       	ldi	r18, 0x10	; 16
 13e:	fc 01       	movw	r30, r24
 140:	20 83       	st	Z, r18
	sei();                            // Habilita interrupções globais, ativando bit I no SREG
 142:	78 94       	sei
}
 144:	00 00       	nop
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	08 95       	ret

0000014c <_Z8debouncev>:

bool debounce(){         // Função simulando millis
 14c:	cf 93       	push	r28
 14e:	df 93       	push	r29
 150:	cd b7       	in	r28, 0x3d	; 61
 152:	de b7       	in	r29, 0x3e	; 62
 154:	2e 97       	sbiw	r28, 0x0e	; 14
 156:	0f b6       	in	r0, 0x3f	; 63
 158:	f8 94       	cli
 15a:	de bf       	out	0x3e, r29	; 62
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	cd bf       	out	0x3d, r28	; 61
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	a6 e9       	ldi	r26, 0x96	; 150
 166:	b3 e4       	ldi	r27, 0x43	; 67
 168:	89 83       	std	Y+1, r24	; 0x01
 16a:	9a 83       	std	Y+2, r25	; 0x02
 16c:	ab 83       	std	Y+3, r26	; 0x03
 16e:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	4a e7       	ldi	r20, 0x7A	; 122
 176:	55 e4       	ldi	r21, 0x45	; 69
 178:	69 81       	ldd	r22, Y+1	; 0x01
 17a:	7a 81       	ldd	r23, Y+2	; 0x02
 17c:	8b 81       	ldd	r24, Y+3	; 0x03
 17e:	9c 81       	ldd	r25, Y+4	; 0x04
 180:	38 d1       	rcall	.+624    	; 0x3f2 <__mulsf3>
 182:	dc 01       	movw	r26, r24
 184:	cb 01       	movw	r24, r22
 186:	8d 83       	std	Y+5, r24	; 0x05
 188:	9e 83       	std	Y+6, r25	; 0x06
 18a:	af 83       	std	Y+7, r26	; 0x07
 18c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	40 e8       	ldi	r20, 0x80	; 128
 194:	5f e3       	ldi	r21, 0x3F	; 63
 196:	6d 81       	ldd	r22, Y+5	; 0x05
 198:	7e 81       	ldd	r23, Y+6	; 0x06
 19a:	8f 81       	ldd	r24, Y+7	; 0x07
 19c:	98 85       	ldd	r25, Y+8	; 0x08
 19e:	a8 d0       	rcall	.+336    	; 0x2f0 <__cmpsf2>
 1a0:	88 23       	and	r24, r24
 1a2:	2c f4       	brge	.+10     	; 0x1ae <_Z8debouncev+0x62>
		__ticks = 1;
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	9a 87       	std	Y+10, r25	; 0x0a
 1aa:	89 87       	std	Y+9, r24	; 0x09
 1ac:	3a c0       	rjmp	.+116    	; 0x222 <_Z8debouncev+0xd6>
	else if (__tmp > 65535)
 1ae:	20 e0       	ldi	r18, 0x00	; 0
 1b0:	3f ef       	ldi	r19, 0xFF	; 255
 1b2:	4f e7       	ldi	r20, 0x7F	; 127
 1b4:	57 e4       	ldi	r21, 0x47	; 71
 1b6:	6d 81       	ldd	r22, Y+5	; 0x05
 1b8:	7e 81       	ldd	r23, Y+6	; 0x06
 1ba:	8f 81       	ldd	r24, Y+7	; 0x07
 1bc:	98 85       	ldd	r25, Y+8	; 0x08
 1be:	15 d1       	rcall	.+554    	; 0x3ea <__gesf2>
 1c0:	18 16       	cp	r1, r24
 1c2:	34 f5       	brge	.+76     	; 0x210 <_Z8debouncev+0xc4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1c4:	20 e0       	ldi	r18, 0x00	; 0
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	40 e2       	ldi	r20, 0x20	; 32
 1ca:	51 e4       	ldi	r21, 0x41	; 65
 1cc:	69 81       	ldd	r22, Y+1	; 0x01
 1ce:	7a 81       	ldd	r23, Y+2	; 0x02
 1d0:	8b 81       	ldd	r24, Y+3	; 0x03
 1d2:	9c 81       	ldd	r25, Y+4	; 0x04
 1d4:	0e d1       	rcall	.+540    	; 0x3f2 <__mulsf3>
 1d6:	dc 01       	movw	r26, r24
 1d8:	cb 01       	movw	r24, r22
 1da:	bc 01       	movw	r22, r24
 1dc:	cd 01       	movw	r24, r26
 1de:	8c d0       	rcall	.+280    	; 0x2f8 <__fixunssfsi>
 1e0:	dc 01       	movw	r26, r24
 1e2:	cb 01       	movw	r24, r22
 1e4:	9a 87       	std	Y+10, r25	; 0x0a
 1e6:	89 87       	std	Y+9, r24	; 0x09
		while(__ticks)
 1e8:	89 85       	ldd	r24, Y+9	; 0x09
 1ea:	9a 85       	ldd	r25, Y+10	; 0x0a
 1ec:	89 2b       	or	r24, r25
 1ee:	19 f1       	breq	.+70     	; 0x236 <_Z8debouncev+0xea>
 1f0:	80 e9       	ldi	r24, 0x90	; 144
 1f2:	91 e0       	ldi	r25, 0x01	; 1
 1f4:	9c 87       	std	Y+12, r25	; 0x0c
 1f6:	8b 87       	std	Y+11, r24	; 0x0b
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 1f8:	8b 85       	ldd	r24, Y+11	; 0x0b
 1fa:	9c 85       	ldd	r25, Y+12	; 0x0c
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <_Z8debouncev+0xb0>
 200:	9c 87       	std	Y+12, r25	; 0x0c
 202:	8b 87       	std	Y+11, r24	; 0x0b
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 204:	89 85       	ldd	r24, Y+9	; 0x09
 206:	9a 85       	ldd	r25, Y+10	; 0x0a
 208:	01 97       	sbiw	r24, 0x01	; 1
 20a:	9a 87       	std	Y+10, r25	; 0x0a
 20c:	89 87       	std	Y+9, r24	; 0x09
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 20e:	ec cf       	rjmp	.-40     	; 0x1e8 <_Z8debouncev+0x9c>
 210:	6d 81       	ldd	r22, Y+5	; 0x05
 212:	7e 81       	ldd	r23, Y+6	; 0x06
 214:	8f 81       	ldd	r24, Y+7	; 0x07
 216:	98 85       	ldd	r25, Y+8	; 0x08
 218:	6f d0       	rcall	.+222    	; 0x2f8 <__fixunssfsi>
 21a:	dc 01       	movw	r26, r24
 21c:	cb 01       	movw	r24, r22
 21e:	9a 87       	std	Y+10, r25	; 0x0a
 220:	89 87       	std	Y+9, r24	; 0x09
 222:	89 85       	ldd	r24, Y+9	; 0x09
 224:	9a 85       	ldd	r25, Y+10	; 0x0a
 226:	9e 87       	std	Y+14, r25	; 0x0e
 228:	8d 87       	std	Y+13, r24	; 0x0d
 22a:	8d 85       	ldd	r24, Y+13	; 0x0d
 22c:	9e 85       	ldd	r25, Y+14	; 0x0e
 22e:	01 97       	sbiw	r24, 0x01	; 1
 230:	f1 f7       	brne	.-4      	; 0x22e <_Z8debouncev+0xe2>
 232:	9e 87       	std	Y+14, r25	; 0x0e
 234:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(300);
	if (PINE & (1 << PE4))
 236:	8c e2       	ldi	r24, 0x2C	; 44
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	fc 01       	movw	r30, r24
 23c:	80 81       	ld	r24, Z
 23e:	88 2f       	mov	r24, r24
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	80 71       	andi	r24, 0x10	; 16
 244:	99 27       	eor	r25, r25
 246:	21 e0       	ldi	r18, 0x01	; 1
 248:	89 2b       	or	r24, r25
 24a:	09 f4       	brne	.+2      	; 0x24e <_Z8debouncev+0x102>
 24c:	20 e0       	ldi	r18, 0x00	; 0
 24e:	22 23       	and	r18, r18
 250:	11 f0       	breq	.+4      	; 0x256 <_Z8debouncev+0x10a>
		return true;
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	01 c0       	rjmp	.+2      	; 0x258 <_Z8debouncev+0x10c>
	else
		return false;
 256:	80 e0       	ldi	r24, 0x00	; 0
}
 258:	2e 96       	adiw	r28, 0x0e	; 14
 25a:	0f b6       	in	r0, 0x3f	; 63
 25c:	f8 94       	cli
 25e:	de bf       	out	0x3e, r29	; 62
 260:	0f be       	out	0x3f, r0	; 63
 262:	cd bf       	out	0x3d, r28	; 61
 264:	df 91       	pop	r29
 266:	cf 91       	pop	r28
 268:	08 95       	ret

0000026a <main>:

int main(){
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	cd b7       	in	r28, 0x3d	; 61
	setup();
 270:	de b7       	in	r29, 0x3e	; 62
 272:	43 df       	rcall	.-378    	; 0xfa <_Z5setupv>
	while(true);
 274:	ff cf       	rjmp	.-2      	; 0x274 <main+0xa>

00000276 <__vector_5>:
}

ISR(INT4_vect){           // Trata interrupção externa
 276:	1f 92       	push	r1
 278:	0f 92       	push	r0
 27a:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 27e:	0f 92       	push	r0
 280:	11 24       	eor	r1, r1
 282:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 286:	0f 92       	push	r0
 288:	2f 93       	push	r18
 28a:	3f 93       	push	r19
 28c:	4f 93       	push	r20
 28e:	5f 93       	push	r21
 290:	6f 93       	push	r22
 292:	7f 93       	push	r23
 294:	8f 93       	push	r24
 296:	9f 93       	push	r25
 298:	af 93       	push	r26
 29a:	bf 93       	push	r27
 29c:	ef 93       	push	r30
 29e:	ff 93       	push	r31
 2a0:	cf 93       	push	r28
 2a2:	df 93       	push	r29
 2a4:	cd b7       	in	r28, 0x3d	; 61
	if (debounce())
 2a6:	de b7       	in	r29, 0x3e	; 62
 2a8:	51 df       	rcall	.-350    	; 0x14c <_Z8debouncev>
 2aa:	88 23       	and	r24, r24
 2ac:	49 f0       	breq	.+18     	; 0x2c0 <__vector_5+0x4a>
		PINH |= (1<<PH6); // Muda o estado do bit
 2ae:	80 e0       	ldi	r24, 0x00	; 0
 2b0:	91 e0       	ldi	r25, 0x01	; 1
 2b2:	20 e0       	ldi	r18, 0x00	; 0
 2b4:	31 e0       	ldi	r19, 0x01	; 1
 2b6:	f9 01       	movw	r30, r18
 2b8:	20 81       	ld	r18, Z
 2ba:	20 64       	ori	r18, 0x40	; 64
 2bc:	fc 01       	movw	r30, r24
 2be:	20 83       	st	Z, r18
}
 2c0:	00 00       	nop
 2c2:	df 91       	pop	r29
 2c4:	cf 91       	pop	r28
 2c6:	ff 91       	pop	r31
 2c8:	ef 91       	pop	r30
 2ca:	bf 91       	pop	r27
 2cc:	af 91       	pop	r26
 2ce:	9f 91       	pop	r25
 2d0:	8f 91       	pop	r24
 2d2:	7f 91       	pop	r23
 2d4:	6f 91       	pop	r22
 2d6:	5f 91       	pop	r21
 2d8:	4f 91       	pop	r20
 2da:	3f 91       	pop	r19
 2dc:	2f 91       	pop	r18
 2de:	0f 90       	pop	r0
 2e0:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x70005b>
 2e4:	0f 90       	pop	r0
 2e6:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x70005f>
 2ea:	0f 90       	pop	r0
 2ec:	1f 90       	pop	r1
 2ee:	18 95       	reti

000002f0 <__cmpsf2>:
 2f0:	2f d0       	rcall	.+94     	; 0x350 <__fp_cmp>
 2f2:	08 f4       	brcc	.+2      	; 0x2f6 <__cmpsf2+0x6>
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	08 95       	ret

000002f8 <__fixunssfsi>:
 2f8:	57 d0       	rcall	.+174    	; 0x3a8 <__fp_splitA>
 2fa:	88 f0       	brcs	.+34     	; 0x31e <__fixunssfsi+0x26>
 2fc:	9f 57       	subi	r25, 0x7F	; 127
 2fe:	90 f0       	brcs	.+36     	; 0x324 <__fixunssfsi+0x2c>
 300:	b9 2f       	mov	r27, r25
 302:	99 27       	eor	r25, r25
 304:	b7 51       	subi	r27, 0x17	; 23
 306:	a0 f0       	brcs	.+40     	; 0x330 <__fixunssfsi+0x38>
 308:	d1 f0       	breq	.+52     	; 0x33e <__fixunssfsi+0x46>
 30a:	66 0f       	add	r22, r22
 30c:	77 1f       	adc	r23, r23
 30e:	88 1f       	adc	r24, r24
 310:	99 1f       	adc	r25, r25
 312:	1a f0       	brmi	.+6      	; 0x31a <__fixunssfsi+0x22>
 314:	ba 95       	dec	r27
 316:	c9 f7       	brne	.-14     	; 0x30a <__fixunssfsi+0x12>
 318:	12 c0       	rjmp	.+36     	; 0x33e <__fixunssfsi+0x46>
 31a:	b1 30       	cpi	r27, 0x01	; 1
 31c:	81 f0       	breq	.+32     	; 0x33e <__fixunssfsi+0x46>
 31e:	5e d0       	rcall	.+188    	; 0x3dc <__fp_zero>
 320:	b1 e0       	ldi	r27, 0x01	; 1
 322:	08 95       	ret
 324:	5b c0       	rjmp	.+182    	; 0x3dc <__fp_zero>
 326:	67 2f       	mov	r22, r23
 328:	78 2f       	mov	r23, r24
 32a:	88 27       	eor	r24, r24
 32c:	b8 5f       	subi	r27, 0xF8	; 248
 32e:	39 f0       	breq	.+14     	; 0x33e <__fixunssfsi+0x46>
 330:	b9 3f       	cpi	r27, 0xF9	; 249
 332:	cc f3       	brlt	.-14     	; 0x326 <__fixunssfsi+0x2e>
 334:	86 95       	lsr	r24
 336:	77 95       	ror	r23
 338:	67 95       	ror	r22
 33a:	b3 95       	inc	r27
 33c:	d9 f7       	brne	.-10     	; 0x334 <__fixunssfsi+0x3c>
 33e:	3e f4       	brtc	.+14     	; 0x34e <__fixunssfsi+0x56>
 340:	90 95       	com	r25
 342:	80 95       	com	r24
 344:	70 95       	com	r23
 346:	61 95       	neg	r22
 348:	7f 4f       	sbci	r23, 0xFF	; 255
 34a:	8f 4f       	sbci	r24, 0xFF	; 255
 34c:	9f 4f       	sbci	r25, 0xFF	; 255
 34e:	08 95       	ret

00000350 <__fp_cmp>:
 350:	99 0f       	add	r25, r25
 352:	00 08       	sbc	r0, r0
 354:	55 0f       	add	r21, r21
 356:	aa 0b       	sbc	r26, r26
 358:	e0 e8       	ldi	r30, 0x80	; 128
 35a:	fe ef       	ldi	r31, 0xFE	; 254
 35c:	16 16       	cp	r1, r22
 35e:	17 06       	cpc	r1, r23
 360:	e8 07       	cpc	r30, r24
 362:	f9 07       	cpc	r31, r25
 364:	c0 f0       	brcs	.+48     	; 0x396 <__fp_cmp+0x46>
 366:	12 16       	cp	r1, r18
 368:	13 06       	cpc	r1, r19
 36a:	e4 07       	cpc	r30, r20
 36c:	f5 07       	cpc	r31, r21
 36e:	98 f0       	brcs	.+38     	; 0x396 <__fp_cmp+0x46>
 370:	62 1b       	sub	r22, r18
 372:	73 0b       	sbc	r23, r19
 374:	84 0b       	sbc	r24, r20
 376:	95 0b       	sbc	r25, r21
 378:	39 f4       	brne	.+14     	; 0x388 <__fp_cmp+0x38>
 37a:	0a 26       	eor	r0, r26
 37c:	61 f0       	breq	.+24     	; 0x396 <__fp_cmp+0x46>
 37e:	23 2b       	or	r18, r19
 380:	24 2b       	or	r18, r20
 382:	25 2b       	or	r18, r21
 384:	21 f4       	brne	.+8      	; 0x38e <__fp_cmp+0x3e>
 386:	08 95       	ret
 388:	0a 26       	eor	r0, r26
 38a:	09 f4       	brne	.+2      	; 0x38e <__fp_cmp+0x3e>
 38c:	a1 40       	sbci	r26, 0x01	; 1
 38e:	a6 95       	lsr	r26
 390:	8f ef       	ldi	r24, 0xFF	; 255
 392:	81 1d       	adc	r24, r1
 394:	81 1d       	adc	r24, r1
 396:	08 95       	ret

00000398 <__fp_split3>:
 398:	57 fd       	sbrc	r21, 7
 39a:	90 58       	subi	r25, 0x80	; 128
 39c:	44 0f       	add	r20, r20
 39e:	55 1f       	adc	r21, r21
 3a0:	59 f0       	breq	.+22     	; 0x3b8 <__fp_splitA+0x10>
 3a2:	5f 3f       	cpi	r21, 0xFF	; 255
 3a4:	71 f0       	breq	.+28     	; 0x3c2 <__fp_splitA+0x1a>
 3a6:	47 95       	ror	r20

000003a8 <__fp_splitA>:
 3a8:	88 0f       	add	r24, r24
 3aa:	97 fb       	bst	r25, 7
 3ac:	99 1f       	adc	r25, r25
 3ae:	61 f0       	breq	.+24     	; 0x3c8 <__fp_splitA+0x20>
 3b0:	9f 3f       	cpi	r25, 0xFF	; 255
 3b2:	79 f0       	breq	.+30     	; 0x3d2 <__fp_splitA+0x2a>
 3b4:	87 95       	ror	r24
 3b6:	08 95       	ret
 3b8:	12 16       	cp	r1, r18
 3ba:	13 06       	cpc	r1, r19
 3bc:	14 06       	cpc	r1, r20
 3be:	55 1f       	adc	r21, r21
 3c0:	f2 cf       	rjmp	.-28     	; 0x3a6 <__fp_split3+0xe>
 3c2:	46 95       	lsr	r20
 3c4:	f1 df       	rcall	.-30     	; 0x3a8 <__fp_splitA>
 3c6:	08 c0       	rjmp	.+16     	; 0x3d8 <__fp_splitA+0x30>
 3c8:	16 16       	cp	r1, r22
 3ca:	17 06       	cpc	r1, r23
 3cc:	18 06       	cpc	r1, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	f1 cf       	rjmp	.-30     	; 0x3b4 <__fp_splitA+0xc>
 3d2:	86 95       	lsr	r24
 3d4:	71 05       	cpc	r23, r1
 3d6:	61 05       	cpc	r22, r1
 3d8:	08 94       	sec
 3da:	08 95       	ret

000003dc <__fp_zero>:
 3dc:	e8 94       	clt

000003de <__fp_szero>:
 3de:	bb 27       	eor	r27, r27
 3e0:	66 27       	eor	r22, r22
 3e2:	77 27       	eor	r23, r23
 3e4:	cb 01       	movw	r24, r22
 3e6:	97 f9       	bld	r25, 7
 3e8:	08 95       	ret

000003ea <__gesf2>:
 3ea:	b2 df       	rcall	.-156    	; 0x350 <__fp_cmp>
 3ec:	08 f4       	brcc	.+2      	; 0x3f0 <__gesf2+0x6>
 3ee:	8f ef       	ldi	r24, 0xFF	; 255
 3f0:	08 95       	ret

000003f2 <__mulsf3>:
 3f2:	0b d0       	rcall	.+22     	; 0x40a <__mulsf3x>
 3f4:	78 c0       	rjmp	.+240    	; 0x4e6 <__fp_round>
 3f6:	69 d0       	rcall	.+210    	; 0x4ca <__fp_pscA>
 3f8:	28 f0       	brcs	.+10     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fa:	6e d0       	rcall	.+220    	; 0x4d8 <__fp_pscB>
 3fc:	18 f0       	brcs	.+6      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fe:	95 23       	and	r25, r21
 400:	09 f0       	breq	.+2      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 402:	5a c0       	rjmp	.+180    	; 0x4b8 <__fp_inf>
 404:	5f c0       	rjmp	.+190    	; 0x4c4 <__fp_nan>
 406:	11 24       	eor	r1, r1
 408:	ea cf       	rjmp	.-44     	; 0x3de <__fp_szero>

0000040a <__mulsf3x>:
 40a:	c6 df       	rcall	.-116    	; 0x398 <__fp_split3>
 40c:	a0 f3       	brcs	.-24     	; 0x3f6 <__mulsf3+0x4>

0000040e <__mulsf3_pse>:
 40e:	95 9f       	mul	r25, r21
 410:	d1 f3       	breq	.-12     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 412:	95 0f       	add	r25, r21
 414:	50 e0       	ldi	r21, 0x00	; 0
 416:	55 1f       	adc	r21, r21
 418:	62 9f       	mul	r22, r18
 41a:	f0 01       	movw	r30, r0
 41c:	72 9f       	mul	r23, r18
 41e:	bb 27       	eor	r27, r27
 420:	f0 0d       	add	r31, r0
 422:	b1 1d       	adc	r27, r1
 424:	63 9f       	mul	r22, r19
 426:	aa 27       	eor	r26, r26
 428:	f0 0d       	add	r31, r0
 42a:	b1 1d       	adc	r27, r1
 42c:	aa 1f       	adc	r26, r26
 42e:	64 9f       	mul	r22, r20
 430:	66 27       	eor	r22, r22
 432:	b0 0d       	add	r27, r0
 434:	a1 1d       	adc	r26, r1
 436:	66 1f       	adc	r22, r22
 438:	82 9f       	mul	r24, r18
 43a:	22 27       	eor	r18, r18
 43c:	b0 0d       	add	r27, r0
 43e:	a1 1d       	adc	r26, r1
 440:	62 1f       	adc	r22, r18
 442:	73 9f       	mul	r23, r19
 444:	b0 0d       	add	r27, r0
 446:	a1 1d       	adc	r26, r1
 448:	62 1f       	adc	r22, r18
 44a:	83 9f       	mul	r24, r19
 44c:	a0 0d       	add	r26, r0
 44e:	61 1d       	adc	r22, r1
 450:	22 1f       	adc	r18, r18
 452:	74 9f       	mul	r23, r20
 454:	33 27       	eor	r19, r19
 456:	a0 0d       	add	r26, r0
 458:	61 1d       	adc	r22, r1
 45a:	23 1f       	adc	r18, r19
 45c:	84 9f       	mul	r24, r20
 45e:	60 0d       	add	r22, r0
 460:	21 1d       	adc	r18, r1
 462:	82 2f       	mov	r24, r18
 464:	76 2f       	mov	r23, r22
 466:	6a 2f       	mov	r22, r26
 468:	11 24       	eor	r1, r1
 46a:	9f 57       	subi	r25, 0x7F	; 127
 46c:	50 40       	sbci	r21, 0x00	; 0
 46e:	8a f0       	brmi	.+34     	; 0x492 <__mulsf3_pse+0x84>
 470:	e1 f0       	breq	.+56     	; 0x4aa <__mulsf3_pse+0x9c>
 472:	88 23       	and	r24, r24
 474:	4a f0       	brmi	.+18     	; 0x488 <__mulsf3_pse+0x7a>
 476:	ee 0f       	add	r30, r30
 478:	ff 1f       	adc	r31, r31
 47a:	bb 1f       	adc	r27, r27
 47c:	66 1f       	adc	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	88 1f       	adc	r24, r24
 482:	91 50       	subi	r25, 0x01	; 1
 484:	50 40       	sbci	r21, 0x00	; 0
 486:	a9 f7       	brne	.-22     	; 0x472 <__mulsf3_pse+0x64>
 488:	9e 3f       	cpi	r25, 0xFE	; 254
 48a:	51 05       	cpc	r21, r1
 48c:	70 f0       	brcs	.+28     	; 0x4aa <__mulsf3_pse+0x9c>
 48e:	14 c0       	rjmp	.+40     	; 0x4b8 <__fp_inf>
 490:	a6 cf       	rjmp	.-180    	; 0x3de <__fp_szero>
 492:	5f 3f       	cpi	r21, 0xFF	; 255
 494:	ec f3       	brlt	.-6      	; 0x490 <__mulsf3_pse+0x82>
 496:	98 3e       	cpi	r25, 0xE8	; 232
 498:	dc f3       	brlt	.-10     	; 0x490 <__mulsf3_pse+0x82>
 49a:	86 95       	lsr	r24
 49c:	77 95       	ror	r23
 49e:	67 95       	ror	r22
 4a0:	b7 95       	ror	r27
 4a2:	f7 95       	ror	r31
 4a4:	e7 95       	ror	r30
 4a6:	9f 5f       	subi	r25, 0xFF	; 255
 4a8:	c1 f7       	brne	.-16     	; 0x49a <__mulsf3_pse+0x8c>
 4aa:	fe 2b       	or	r31, r30
 4ac:	88 0f       	add	r24, r24
 4ae:	91 1d       	adc	r25, r1
 4b0:	96 95       	lsr	r25
 4b2:	87 95       	ror	r24
 4b4:	97 f9       	bld	r25, 7
 4b6:	08 95       	ret

000004b8 <__fp_inf>:
 4b8:	97 f9       	bld	r25, 7
 4ba:	9f 67       	ori	r25, 0x7F	; 127
 4bc:	80 e8       	ldi	r24, 0x80	; 128
 4be:	70 e0       	ldi	r23, 0x00	; 0
 4c0:	60 e0       	ldi	r22, 0x00	; 0
 4c2:	08 95       	ret

000004c4 <__fp_nan>:
 4c4:	9f ef       	ldi	r25, 0xFF	; 255
 4c6:	80 ec       	ldi	r24, 0xC0	; 192
 4c8:	08 95       	ret

000004ca <__fp_pscA>:
 4ca:	00 24       	eor	r0, r0
 4cc:	0a 94       	dec	r0
 4ce:	16 16       	cp	r1, r22
 4d0:	17 06       	cpc	r1, r23
 4d2:	18 06       	cpc	r1, r24
 4d4:	09 06       	cpc	r0, r25
 4d6:	08 95       	ret

000004d8 <__fp_pscB>:
 4d8:	00 24       	eor	r0, r0
 4da:	0a 94       	dec	r0
 4dc:	12 16       	cp	r1, r18
 4de:	13 06       	cpc	r1, r19
 4e0:	14 06       	cpc	r1, r20
 4e2:	05 06       	cpc	r0, r21
 4e4:	08 95       	ret

000004e6 <__fp_round>:
 4e6:	09 2e       	mov	r0, r25
 4e8:	03 94       	inc	r0
 4ea:	00 0c       	add	r0, r0
 4ec:	11 f4       	brne	.+4      	; 0x4f2 <__fp_round+0xc>
 4ee:	88 23       	and	r24, r24
 4f0:	52 f0       	brmi	.+20     	; 0x506 <__fp_round+0x20>
 4f2:	bb 0f       	add	r27, r27
 4f4:	40 f4       	brcc	.+16     	; 0x506 <__fp_round+0x20>
 4f6:	bf 2b       	or	r27, r31
 4f8:	11 f4       	brne	.+4      	; 0x4fe <__fp_round+0x18>
 4fa:	60 ff       	sbrs	r22, 0
 4fc:	04 c0       	rjmp	.+8      	; 0x506 <__fp_round+0x20>
 4fe:	6f 5f       	subi	r22, 0xFF	; 255
 500:	7f 4f       	sbci	r23, 0xFF	; 255
 502:	8f 4f       	sbci	r24, 0xFF	; 255
 504:	9f 4f       	sbci	r25, 0xFF	; 255
 506:	08 95       	ret

00000508 <_exit>:
 508:	f8 94       	cli

0000050a <__stop_program>:
 50a:	ff cf       	rjmp	.-2      	; 0x50a <__stop_program>
