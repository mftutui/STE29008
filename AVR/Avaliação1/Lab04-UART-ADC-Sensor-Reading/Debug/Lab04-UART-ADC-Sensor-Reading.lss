
Lab04-UART-ADC-Sensor-Reading.elf: formato do arquivo elf32-avr

Seções:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800200  000010ee  00001182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000010ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800222  00800222  000011a4  2**0
                  ALLOC
  3 .stab         00000abc  00000000  00000000  000011a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000010bb  00000000  00000000  00001c60  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00002d1b  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002d2c  2**2
                  CONTENTS, READONLY
  7 .debug_info   00000bbc  00000000  00000000  00002d6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000b1a  00000000  00000000  00003928  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00004442  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e6  00000000  00000000  0000445c  2**0
                  CONTENTS, READONLY, DEBUGGING

Desmontagem da seção .text:

00000000 <__vectors>:
       0:	ee c0       	rjmp	.+476    	; 0x1de <__ctors_end>
       2:	00 00       	nop
       4:	0b c1       	rjmp	.+534    	; 0x21c <__bad_interrupt>
       6:	00 00       	nop
       8:	09 c1       	rjmp	.+530    	; 0x21c <__bad_interrupt>
       a:	00 00       	nop
       c:	07 c1       	rjmp	.+526    	; 0x21c <__bad_interrupt>
       e:	00 00       	nop
      10:	05 c1       	rjmp	.+522    	; 0x21c <__bad_interrupt>
      12:	00 00       	nop
      14:	03 c1       	rjmp	.+518    	; 0x21c <__bad_interrupt>
      16:	00 00       	nop
      18:	01 c1       	rjmp	.+514    	; 0x21c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ff c0       	rjmp	.+510    	; 0x21c <__bad_interrupt>
      1e:	00 00       	nop
      20:	fd c0       	rjmp	.+506    	; 0x21c <__bad_interrupt>
      22:	00 00       	nop
      24:	fb c0       	rjmp	.+502    	; 0x21c <__bad_interrupt>
      26:	00 00       	nop
      28:	f9 c0       	rjmp	.+498    	; 0x21c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	f7 c0       	rjmp	.+494    	; 0x21c <__bad_interrupt>
      2e:	00 00       	nop
      30:	f5 c0       	rjmp	.+490    	; 0x21c <__bad_interrupt>
      32:	00 00       	nop
      34:	f3 c0       	rjmp	.+486    	; 0x21c <__bad_interrupt>
      36:	00 00       	nop
      38:	f1 c0       	rjmp	.+482    	; 0x21c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	ef c0       	rjmp	.+478    	; 0x21c <__bad_interrupt>
      3e:	00 00       	nop
      40:	ed c0       	rjmp	.+474    	; 0x21c <__bad_interrupt>
      42:	00 00       	nop
      44:	eb c0       	rjmp	.+470    	; 0x21c <__bad_interrupt>
      46:	00 00       	nop
      48:	e9 c0       	rjmp	.+466    	; 0x21c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	e7 c0       	rjmp	.+462    	; 0x21c <__bad_interrupt>
      4e:	00 00       	nop
      50:	e5 c0       	rjmp	.+458    	; 0x21c <__bad_interrupt>
      52:	00 00       	nop
      54:	e3 c0       	rjmp	.+454    	; 0x21c <__bad_interrupt>
      56:	00 00       	nop
      58:	e1 c0       	rjmp	.+450    	; 0x21c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	df c0       	rjmp	.+446    	; 0x21c <__bad_interrupt>
      5e:	00 00       	nop
      60:	dd c0       	rjmp	.+442    	; 0x21c <__bad_interrupt>
      62:	00 00       	nop
      64:	db c0       	rjmp	.+438    	; 0x21c <__bad_interrupt>
      66:	00 00       	nop
      68:	d9 c0       	rjmp	.+434    	; 0x21c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	d7 c0       	rjmp	.+430    	; 0x21c <__bad_interrupt>
      6e:	00 00       	nop
      70:	d5 c0       	rjmp	.+426    	; 0x21c <__bad_interrupt>
      72:	00 00       	nop
      74:	d3 c0       	rjmp	.+422    	; 0x21c <__bad_interrupt>
      76:	00 00       	nop
      78:	d1 c0       	rjmp	.+418    	; 0x21c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	cf c0       	rjmp	.+414    	; 0x21c <__bad_interrupt>
      7e:	00 00       	nop
      80:	cd c0       	rjmp	.+410    	; 0x21c <__bad_interrupt>
      82:	00 00       	nop
      84:	cb c0       	rjmp	.+406    	; 0x21c <__bad_interrupt>
      86:	00 00       	nop
      88:	c9 c0       	rjmp	.+402    	; 0x21c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c7 c0       	rjmp	.+398    	; 0x21c <__bad_interrupt>
      8e:	00 00       	nop
      90:	c5 c0       	rjmp	.+394    	; 0x21c <__bad_interrupt>
      92:	00 00       	nop
      94:	c3 c0       	rjmp	.+390    	; 0x21c <__bad_interrupt>
      96:	00 00       	nop
      98:	c1 c0       	rjmp	.+386    	; 0x21c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	bf c0       	rjmp	.+382    	; 0x21c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	bd c0       	rjmp	.+378    	; 0x21c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	bb c0       	rjmp	.+374    	; 0x21c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	b9 c0       	rjmp	.+370    	; 0x21c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	b7 c0       	rjmp	.+366    	; 0x21c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	b5 c0       	rjmp	.+362    	; 0x21c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	b3 c0       	rjmp	.+358    	; 0x21c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	b1 c0       	rjmp	.+354    	; 0x21c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	af c0       	rjmp	.+350    	; 0x21c <__bad_interrupt>
      be:	00 00       	nop
      c0:	ad c0       	rjmp	.+346    	; 0x21c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	ab c0       	rjmp	.+342    	; 0x21c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	a9 c0       	rjmp	.+338    	; 0x21c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	a7 c0       	rjmp	.+334    	; 0x21c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	a5 c0       	rjmp	.+330    	; 0x21c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	a3 c0       	rjmp	.+326    	; 0x21c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	a1 c0       	rjmp	.+322    	; 0x21c <__bad_interrupt>
      da:	00 00       	nop
      dc:	9f c0       	rjmp	.+318    	; 0x21c <__bad_interrupt>
      de:	00 00       	nop
      e0:	9d c0       	rjmp	.+314    	; 0x21c <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
      e4:	00 40       	sbci	r16, 0x00	; 0
      e6:	7a 10       	cpse	r7, r10
      e8:	f3 5a       	subi	r31, 0xA3	; 163
      ea:	00 a0       	ldd	r0, Z+32	; 0x20
      ec:	72 4e       	sbci	r23, 0xE2	; 226
      ee:	18 09       	sbc	r17, r8
      f0:	00 10       	cpse	r0, r0
      f2:	a5 d4       	rcall	.+2378   	; 0xa3e <__fp_round+0x1e>
      f4:	e8 00       	.word	0x00e8	; ????
      f6:	00 e8       	ldi	r16, 0x80	; 128
      f8:	76 48       	sbci	r23, 0x86	; 134
      fa:	17 00       	.word	0x0017	; ????
      fc:	00 e4       	ldi	r16, 0x40	; 64
      fe:	0b 54       	subi	r16, 0x4B	; 75
     100:	02 00       	.word	0x0002	; ????
     102:	00 ca       	rjmp	.-3072   	; 0xfffff504 <__eeprom_end+0xff7ef504>
     104:	9a 3b       	cpi	r25, 0xBA	; 186
     106:	00 00       	nop
     108:	00 e1       	ldi	r16, 0x10	; 16
     10a:	f5 05       	cpc	r31, r5
     10c:	00 00       	nop
     10e:	80 96       	adiw	r24, 0x20	; 32
     110:	98 00       	.word	0x0098	; ????
     112:	00 00       	nop
     114:	40 42       	sbci	r20, 0x20	; 32
     116:	0f 00       	.word	0x000f	; ????
     118:	00 00       	nop
     11a:	a0 86       	std	Z+8, r10	; 0x08
     11c:	01 00       	.word	0x0001	; ????
     11e:	00 00       	nop
     120:	10 27       	eor	r17, r16
     122:	00 00       	nop
     124:	00 00       	nop
     126:	e8 03       	fmulsu	r22, r16
     128:	00 00       	nop
     12a:	00 00       	nop
     12c:	64 00       	.word	0x0064	; ????
     12e:	00 00       	nop
     130:	00 00       	nop
     132:	0a 00       	.word	0x000a	; ????
     134:	00 00       	nop
     136:	00 00       	nop
     138:	01 00       	.word	0x0001	; ????
     13a:	00 00       	nop
     13c:	00 00       	nop
     13e:	2c 76       	andi	r18, 0x6C	; 108
     140:	d8 88       	ldd	r13, Y+16	; 0x10
     142:	dc 67       	ori	r29, 0x7C	; 124
     144:	4f 08       	sbc	r4, r15
     146:	23 df       	rcall	.-442    	; 0xffffff8e <__eeprom_end+0xff7eff8e>
     148:	c1 df       	rcall	.-126    	; 0xcc <__SREG__+0x8d>
     14a:	ae 59       	subi	r26, 0x9E	; 158
     14c:	e1 b1       	in	r30, 0x01	; 1
     14e:	b7 96       	adiw	r30, 0x27	; 39
     150:	e5 e3       	ldi	r30, 0x35	; 53
     152:	e4 53       	subi	r30, 0x34	; 52
     154:	c6 3a       	cpi	r28, 0xA6	; 166
     156:	e6 51       	subi	r30, 0x16	; 22
     158:	99 76       	andi	r25, 0x69	; 105
     15a:	96 e8       	ldi	r25, 0x86	; 134
     15c:	e6 c2       	rjmp	.+1484   	; 0x72a <main+0x2aa>
     15e:	84 26       	eor	r8, r20
     160:	eb 89       	ldd	r30, Y+19	; 0x13
     162:	8c 9b       	sbis	0x11, 4	; 17
     164:	62 ed       	ldi	r22, 0xD2	; 210
     166:	40 7c       	andi	r20, 0xC0	; 192
     168:	6f fc       	.word	0xfc6f	; ????
     16a:	ef bc       	out	0x2f, r14	; 47
     16c:	9c 9f       	mul	r25, r28
     16e:	40 f2       	brcs	.-112    	; 0x100 <__trampolines_end+0x1c>
     170:	ba a5       	ldd	r27, Y+42	; 0x2a
     172:	6f a5       	ldd	r22, Y+47	; 0x2f
     174:	f4 90       	lpm	r15, Z
     176:	05 5a       	subi	r16, 0xA5	; 165
     178:	2a f7       	brpl	.-54     	; 0x144 <__trampolines_end+0x60>
     17a:	5c 93       	st	X, r21
     17c:	6b 6c       	ori	r22, 0xCB	; 203
     17e:	f9 67       	ori	r31, 0x79	; 121
     180:	6d c1       	rjmp	.+730    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
     182:	1b fc       	.word	0xfc1b	; ????
     184:	e0 e4       	ldi	r30, 0x40	; 64
     186:	0d 47       	sbci	r16, 0x7D	; 125
     188:	fe f5       	brtc	.+126    	; 0x208 <__do_clear_bss>
     18a:	20 e6       	ldi	r18, 0x60	; 96
     18c:	b5 00       	.word	0x00b5	; ????
     18e:	d0 ed       	ldi	r29, 0xD0	; 208
     190:	90 2e       	mov	r9, r16
     192:	03 00       	.word	0x0003	; ????
     194:	94 35       	cpi	r25, 0x54	; 84
     196:	77 05       	cpc	r23, r7
     198:	00 80       	ld	r0, Z
     19a:	84 1e       	adc	r8, r20
     19c:	08 00       	.word	0x0008	; ????
     19e:	00 20       	and	r0, r0
     1a0:	4e 0a       	sbc	r4, r30
     1a2:	00 00       	nop
     1a4:	00 c8       	rjmp	.-4096   	; 0xfffff1a6 <__eeprom_end+0xff7ef1a6>
     1a6:	0c 33       	cpi	r16, 0x3C	; 60
     1a8:	33 33       	cpi	r19, 0x33	; 51
     1aa:	33 0f       	add	r19, r19
     1ac:	98 6e       	ori	r25, 0xE8	; 232
     1ae:	12 83       	std	Z+2, r17	; 0x02
     1b0:	11 41       	sbci	r17, 0x11	; 17
     1b2:	ef 8d       	ldd	r30, Y+31	; 0x1f
     1b4:	21 14       	cp	r2, r1
     1b6:	89 3b       	cpi	r24, 0xB9	; 185
     1b8:	e6 55       	subi	r30, 0x56	; 86
     1ba:	16 cf       	rjmp	.-468    	; 0xffffffe8 <__eeprom_end+0xff7effe8>
     1bc:	fe e6       	ldi	r31, 0x6E	; 110
     1be:	db 18       	sub	r13, r11
     1c0:	d1 84       	ldd	r13, Z+9	; 0x09
     1c2:	4b 38       	cpi	r20, 0x8B	; 139
     1c4:	1b f7       	brvc	.-58     	; 0x18c <__trampolines_end+0xa8>
     1c6:	7c 1d       	adc	r23, r12
     1c8:	90 1d       	adc	r25, r0
     1ca:	a4 bb       	out	0x14, r26	; 20
     1cc:	e4 24       	eor	r14, r4
     1ce:	20 32       	cpi	r18, 0x20	; 32
     1d0:	84 72       	andi	r24, 0x24	; 36
     1d2:	5e 22       	and	r5, r30
     1d4:	81 00       	.word	0x0081	; ????
     1d6:	c9 f1       	breq	.+114    	; 0x24a <_Z8adc_initv+0x2c>
     1d8:	24 ec       	ldi	r18, 0xC4	; 196
     1da:	a1 e5       	ldi	r26, 0x51	; 81
     1dc:	3d 27       	eor	r19, r29

000001de <__ctors_end>:
     1de:	11 24       	eor	r1, r1
     1e0:	1f be       	out	0x3f, r1	; 63
     1e2:	cf ef       	ldi	r28, 0xFF	; 255
     1e4:	d1 e2       	ldi	r29, 0x21	; 33
     1e6:	de bf       	out	0x3e, r29	; 62
     1e8:	cd bf       	out	0x3d, r28	; 61
     1ea:	00 e0       	ldi	r16, 0x00	; 0
     1ec:	0c bf       	out	0x3c, r16	; 60

000001ee <__do_copy_data>:
     1ee:	12 e0       	ldi	r17, 0x02	; 2
     1f0:	a0 e0       	ldi	r26, 0x00	; 0
     1f2:	b2 e0       	ldi	r27, 0x02	; 2
     1f4:	ee ee       	ldi	r30, 0xEE	; 238
     1f6:	f0 e1       	ldi	r31, 0x10	; 16
     1f8:	00 e0       	ldi	r16, 0x00	; 0
     1fa:	0b bf       	out	0x3b, r16	; 59
     1fc:	02 c0       	rjmp	.+4      	; 0x202 <__do_copy_data+0x14>
     1fe:	07 90       	elpm	r0, Z+
     200:	0d 92       	st	X+, r0
     202:	a2 32       	cpi	r26, 0x22	; 34
     204:	b1 07       	cpc	r27, r17
     206:	d9 f7       	brne	.-10     	; 0x1fe <__do_copy_data+0x10>

00000208 <__do_clear_bss>:
     208:	22 e0       	ldi	r18, 0x02	; 2
     20a:	a2 e2       	ldi	r26, 0x22	; 34
     20c:	b2 e0       	ldi	r27, 0x02	; 2
     20e:	01 c0       	rjmp	.+2      	; 0x212 <.do_clear_bss_start>

00000210 <.do_clear_bss_loop>:
     210:	1d 92       	st	X+, r1

00000212 <.do_clear_bss_start>:
     212:	aa 32       	cpi	r26, 0x2A	; 42
     214:	b2 07       	cpc	r27, r18
     216:	e1 f7       	brne	.-8      	; 0x210 <.do_clear_bss_loop>
     218:	33 d1       	rcall	.+614    	; 0x480 <main>
     21a:	67 c7       	rjmp	.+3790   	; 0x10ea <_exit>

0000021c <__bad_interrupt>:
     21c:	f1 ce       	rjmp	.-542    	; 0x0 <__vectors>

0000021e <_Z8adc_initv>:
#define MYUBRR (FOSC/16/BAUD)-1

float analog_value, digital_value;
uint8_t channel = 5;

void adc_init(void){
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
	ADMUX |= (1<<REFS0);       // Tensão de refência
     226:	8c e7       	ldi	r24, 0x7C	; 124
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	2c e7       	ldi	r18, 0x7C	; 124
     22c:	30 e0       	ldi	r19, 0x00	; 0
     22e:	f9 01       	movw	r30, r18
     230:	20 81       	ld	r18, Z
     232:	20 64       	ori	r18, 0x40	; 64
     234:	fc 01       	movw	r30, r24
     236:	20 83       	st	Z, r18
	ADCSRA |= (1<<ADEN);       // ADC
     238:	8a e7       	ldi	r24, 0x7A	; 122
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	2a e7       	ldi	r18, 0x7A	; 122
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	f9 01       	movw	r30, r18
     242:	20 81       	ld	r18, Z
     244:	20 68       	ori	r18, 0x80	; 128
     246:	fc 01       	movw	r30, r24
     248:	20 83       	st	Z, r18
}
     24a:	00 00       	nop
     24c:	df 91       	pop	r29
     24e:	cf 91       	pop	r28
     250:	08 95       	ret

00000252 <_Z8read_adch>:

uint16_t read_adc(uint8_t channel){
     252:	cf 93       	push	r28
     254:	df 93       	push	r29
     256:	1f 92       	push	r1
     258:	cd b7       	in	r28, 0x3d	; 61
     25a:	de b7       	in	r29, 0x3e	; 62
     25c:	89 83       	std	Y+1, r24	; 0x01
	ADMUX &= 0xE0;             // Limpa MUX
     25e:	8c e7       	ldi	r24, 0x7C	; 124
     260:	90 e0       	ldi	r25, 0x00	; 0
     262:	2c e7       	ldi	r18, 0x7C	; 124
     264:	30 e0       	ldi	r19, 0x00	; 0
     266:	f9 01       	movw	r30, r18
     268:	20 81       	ld	r18, Z
     26a:	20 7e       	andi	r18, 0xE0	; 224
     26c:	fc 01       	movw	r30, r24
     26e:	20 83       	st	Z, r18
	ADMUX |= channel&0x07;     // Canal a ser lido
     270:	8c e7       	ldi	r24, 0x7C	; 124
     272:	90 e0       	ldi	r25, 0x00	; 0
     274:	2c e7       	ldi	r18, 0x7C	; 124
     276:	30 e0       	ldi	r19, 0x00	; 0
     278:	f9 01       	movw	r30, r18
     27a:	20 81       	ld	r18, Z
     27c:	32 2f       	mov	r19, r18
     27e:	29 81       	ldd	r18, Y+1	; 0x01
     280:	27 70       	andi	r18, 0x07	; 7
     282:	23 2b       	or	r18, r19
     284:	fc 01       	movw	r30, r24
     286:	20 83       	st	Z, r18
	ADCSRB = channel&(1<<3);   // MUX5
     288:	8b e7       	ldi	r24, 0x7B	; 123
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	29 81       	ldd	r18, Y+1	; 0x01
     28e:	28 70       	andi	r18, 0x08	; 8
     290:	fc 01       	movw	r30, r24
     292:	20 83       	st	Z, r18
	ADCSRA |= (1<<ADSC);       // Inicia nova conversão
     294:	8a e7       	ldi	r24, 0x7A	; 122
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	2a e7       	ldi	r18, 0x7A	; 122
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	f9 01       	movw	r30, r18
     29e:	20 81       	ld	r18, Z
     2a0:	20 64       	ori	r18, 0x40	; 64
     2a2:	fc 01       	movw	r30, r24
     2a4:	20 83       	st	Z, r18
	while(ADCSRA & (1<<ADSC)); // Espera conversão
     2a6:	8a e7       	ldi	r24, 0x7A	; 122
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	fc 01       	movw	r30, r24
     2ac:	80 81       	ld	r24, Z
     2ae:	88 2f       	mov	r24, r24
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	80 74       	andi	r24, 0x40	; 64
     2b4:	99 27       	eor	r25, r25
     2b6:	21 e0       	ldi	r18, 0x01	; 1
     2b8:	89 2b       	or	r24, r25
     2ba:	09 f4       	brne	.+2      	; 0x2be <_Z8read_adch+0x6c>
     2bc:	20 e0       	ldi	r18, 0x00	; 0
     2be:	22 23       	and	r18, r18
     2c0:	09 f0       	breq	.+2      	; 0x2c4 <_Z8read_adch+0x72>
     2c2:	f1 cf       	rjmp	.-30     	; 0x2a6 <_Z8read_adch+0x54>
	return ADCW;               // Retorna o valor para o canal
     2c4:	88 e7       	ldi	r24, 0x78	; 120
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	fc 01       	movw	r30, r24
     2ca:	80 81       	ld	r24, Z
     2cc:	91 81       	ldd	r25, Z+1	; 0x01
}
     2ce:	0f 90       	pop	r0
     2d0:	df 91       	pop	r29
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret

000002d6 <_Z10USART_Initj>:

void USART_Init(unsigned int ubrr){
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	1f 92       	push	r1
     2dc:	1f 92       	push	r1
     2de:	cd b7       	in	r28, 0x3d	; 61
     2e0:	de b7       	in	r29, 0x3e	; 62
     2e2:	9a 83       	std	Y+2, r25	; 0x02
     2e4:	89 83       	std	Y+1, r24	; 0x01
	UBRR0H = (unsigned char)(ubrr>>8); // Taxa de transmissão
     2e6:	85 ec       	ldi	r24, 0xC5	; 197
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	29 81       	ldd	r18, Y+1	; 0x01
     2ec:	3a 81       	ldd	r19, Y+2	; 0x02
     2ee:	23 2f       	mov	r18, r19
     2f0:	33 27       	eor	r19, r19
     2f2:	fc 01       	movw	r30, r24
     2f4:	20 83       	st	Z, r18
	UBRR0L = (unsigned char)ubrr;
     2f6:	84 ec       	ldi	r24, 0xC4	; 196
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	29 81       	ldd	r18, Y+1	; 0x01
     2fc:	fc 01       	movw	r30, r24
     2fe:	20 83       	st	Z, r18
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);    // Habilita RX e TX
     300:	81 ec       	ldi	r24, 0xC1	; 193
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	28 e1       	ldi	r18, 0x18	; 24
     306:	fc 01       	movw	r30, r24
     308:	20 83       	st	Z, r18

	UCSR0C &= ~(1<<USBS0);             // Formato do frame
     30a:	82 ec       	ldi	r24, 0xC2	; 194
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	22 ec       	ldi	r18, 0xC2	; 194
     310:	30 e0       	ldi	r19, 0x00	; 0
     312:	f9 01       	movw	r30, r18
     314:	20 81       	ld	r18, Z
     316:	27 7f       	andi	r18, 0xF7	; 247
     318:	fc 01       	movw	r30, r24
     31a:	20 83       	st	Z, r18
	UCSR0C |= (3<<UCSZ00);
     31c:	82 ec       	ldi	r24, 0xC2	; 194
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	22 ec       	ldi	r18, 0xC2	; 194
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	f9 01       	movw	r30, r18
     326:	20 81       	ld	r18, Z
     328:	26 60       	ori	r18, 0x06	; 6
     32a:	fc 01       	movw	r30, r24
     32c:	20 83       	st	Z, r18
}
     32e:	00 00       	nop
     330:	0f 90       	pop	r0
     332:	0f 90       	pop	r0
     334:	df 91       	pop	r29
     336:	cf 91       	pop	r28
     338:	08 95       	ret

0000033a <_Z14USART_Transmith>:

void USART_Transmit( uint8_t data ){
     33a:	cf 93       	push	r28
     33c:	df 93       	push	r29
     33e:	1f 92       	push	r1
     340:	cd b7       	in	r28, 0x3d	; 61
     342:	de b7       	in	r29, 0x3e	; 62
     344:	89 83       	std	Y+1, r24	; 0x01
	while ( !( UCSR0A & (1<<UDRE0)) ); // Espera para transmitir
     346:	80 ec       	ldi	r24, 0xC0	; 192
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	fc 01       	movw	r30, r24
     34c:	80 81       	ld	r24, Z
     34e:	88 2f       	mov	r24, r24
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	80 72       	andi	r24, 0x20	; 32
     354:	99 27       	eor	r25, r25
     356:	21 e0       	ldi	r18, 0x01	; 1
     358:	89 2b       	or	r24, r25
     35a:	09 f0       	breq	.+2      	; 0x35e <_Z14USART_Transmith+0x24>
     35c:	20 e0       	ldi	r18, 0x00	; 0
     35e:	22 23       	and	r18, r18
     360:	09 f0       	breq	.+2      	; 0x364 <_Z14USART_Transmith+0x2a>
     362:	f1 cf       	rjmp	.-30     	; 0x346 <_Z14USART_Transmith+0xc>
	UDR0 = data;                       // Envia dado
     364:	86 ec       	ldi	r24, 0xC6	; 198
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	29 81       	ldd	r18, Y+1	; 0x01
     36a:	fc 01       	movw	r30, r24
     36c:	20 83       	st	Z, r18
}
     36e:	00 00       	nop
     370:	0f 90       	pop	r0
     372:	df 91       	pop	r29
     374:	cf 91       	pop	r28
     376:	08 95       	ret

00000378 <_Z3RMSi>:

int RMS ( int repeat ){
     378:	cf 93       	push	r28
     37a:	df 93       	push	r29
     37c:	cd b7       	in	r28, 0x3d	; 61
     37e:	de b7       	in	r29, 0x3e	; 62
     380:	2c 97       	sbiw	r28, 0x0c	; 12
     382:	0f b6       	in	r0, 0x3f	; 63
     384:	f8 94       	cli
     386:	de bf       	out	0x3e, r29	; 62
     388:	0f be       	out	0x3f, r0	; 63
     38a:	cd bf       	out	0x3d, r28	; 61
     38c:	9c 87       	std	Y+12, r25	; 0x0c
     38e:	8b 87       	std	Y+11, r24	; 0x0b
	float accumulated = 0;
     390:	19 82       	std	Y+1, r1	; 0x01
     392:	1a 82       	std	Y+2, r1	; 0x02
     394:	1b 82       	std	Y+3, r1	; 0x03
     396:	1c 82       	std	Y+4, r1	; 0x04
	float average;

	for (int i = 0; i < repeat; i++){
     398:	1e 82       	std	Y+6, r1	; 0x06
     39a:	1d 82       	std	Y+5, r1	; 0x05
     39c:	2d 81       	ldd	r18, Y+5	; 0x05
     39e:	3e 81       	ldd	r19, Y+6	; 0x06
     3a0:	8b 85       	ldd	r24, Y+11	; 0x0b
     3a2:	9c 85       	ldd	r25, Y+12	; 0x0c
     3a4:	28 17       	cp	r18, r24
     3a6:	39 07       	cpc	r19, r25
     3a8:	0c f0       	brlt	.+2      	; 0x3ac <_Z3RMSi+0x34>
     3aa:	3b c0       	rjmp	.+118    	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
		digital_value = read_adc(channel);
     3ac:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__data_start>
     3b0:	50 df       	rcall	.-352    	; 0x252 <_Z8read_adch>
     3b2:	cc 01       	movw	r24, r24
     3b4:	a0 e0       	ldi	r26, 0x00	; 0
     3b6:	b0 e0       	ldi	r27, 0x00	; 0
     3b8:	bc 01       	movw	r22, r24
     3ba:	cd 01       	movw	r24, r26
     3bc:	b9 d2       	rcall	.+1394   	; 0x930 <__floatunsisf>
     3be:	dc 01       	movw	r26, r24
     3c0:	cb 01       	movw	r24, r22
     3c2:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <digital_value>
     3c6:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <digital_value+0x1>
     3ca:	a0 93 28 02 	sts	0x0228, r26	; 0x800228 <digital_value+0x2>
     3ce:	b0 93 29 02 	sts	0x0229, r27	; 0x800229 <digital_value+0x3>
		accumulated = accumulated + (digital_value * digital_value);
     3d2:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <digital_value>
     3d6:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <digital_value+0x1>
     3da:	a0 91 28 02 	lds	r26, 0x0228	; 0x800228 <digital_value+0x2>
     3de:	b0 91 29 02 	lds	r27, 0x0229	; 0x800229 <digital_value+0x3>
     3e2:	20 91 26 02 	lds	r18, 0x0226	; 0x800226 <digital_value>
     3e6:	30 91 27 02 	lds	r19, 0x0227	; 0x800227 <digital_value+0x1>
     3ea:	40 91 28 02 	lds	r20, 0x0228	; 0x800228 <digital_value+0x2>
     3ee:	50 91 29 02 	lds	r21, 0x0229	; 0x800229 <digital_value+0x3>
     3f2:	bc 01       	movw	r22, r24
     3f4:	cd 01       	movw	r24, r26
     3f6:	52 d3       	rcall	.+1700   	; 0xa9c <__mulsf3>
     3f8:	dc 01       	movw	r26, r24
     3fa:	cb 01       	movw	r24, r22
     3fc:	9c 01       	movw	r18, r24
     3fe:	ad 01       	movw	r20, r26
     400:	69 81       	ldd	r22, Y+1	; 0x01
     402:	7a 81       	ldd	r23, Y+2	; 0x02
     404:	8b 81       	ldd	r24, Y+3	; 0x03
     406:	9c 81       	ldd	r25, Y+4	; 0x04
     408:	92 d1       	rcall	.+804    	; 0x72e <__addsf3>
     40a:	dc 01       	movw	r26, r24
     40c:	cb 01       	movw	r24, r22
     40e:	89 83       	std	Y+1, r24	; 0x01
     410:	9a 83       	std	Y+2, r25	; 0x02
     412:	ab 83       	std	Y+3, r26	; 0x03
     414:	bc 83       	std	Y+4, r27	; 0x04

int RMS ( int repeat ){
	float accumulated = 0;
	float average;

	for (int i = 0; i < repeat; i++){
     416:	8d 81       	ldd	r24, Y+5	; 0x05
     418:	9e 81       	ldd	r25, Y+6	; 0x06
     41a:	01 96       	adiw	r24, 0x01	; 1
     41c:	9e 83       	std	Y+6, r25	; 0x06
     41e:	8d 83       	std	Y+5, r24	; 0x05
     420:	bd cf       	rjmp	.-134    	; 0x39c <_Z3RMSi+0x24>
		digital_value = read_adc(channel);
		accumulated = accumulated + (digital_value * digital_value);
	}
	average = accumulated/repeat;
     422:	8b 85       	ldd	r24, Y+11	; 0x0b
     424:	9c 85       	ldd	r25, Y+12	; 0x0c
     426:	09 2e       	mov	r0, r25
     428:	00 0c       	add	r0, r0
     42a:	aa 0b       	sbc	r26, r26
     42c:	bb 0b       	sbc	r27, r27
     42e:	bc 01       	movw	r22, r24
     430:	cd 01       	movw	r24, r26
     432:	80 d2       	rcall	.+1280   	; 0x934 <__floatsisf>
     434:	dc 01       	movw	r26, r24
     436:	cb 01       	movw	r24, r22
     438:	9c 01       	movw	r18, r24
     43a:	ad 01       	movw	r20, r26
     43c:	69 81       	ldd	r22, Y+1	; 0x01
     43e:	7a 81       	ldd	r23, Y+2	; 0x02
     440:	8b 81       	ldd	r24, Y+3	; 0x03
     442:	9c 81       	ldd	r25, Y+4	; 0x04
     444:	dc d1       	rcall	.+952    	; 0x7fe <__divsf3>
     446:	dc 01       	movw	r26, r24
     448:	cb 01       	movw	r24, r22
     44a:	8f 83       	std	Y+7, r24	; 0x07
     44c:	98 87       	std	Y+8, r25	; 0x08
     44e:	a9 87       	std	Y+9, r26	; 0x09
	return sqrt(average);
     450:	ba 87       	std	Y+10, r27	; 0x0a
     452:	8f 81       	ldd	r24, Y+7	; 0x07
     454:	98 85       	ldd	r25, Y+8	; 0x08
     456:	a9 85       	ldd	r26, Y+9	; 0x09
     458:	ba 85       	ldd	r27, Y+10	; 0x0a
     45a:	bc 01       	movw	r22, r24
     45c:	cd 01       	movw	r24, r26
     45e:	85 d3       	rcall	.+1802   	; 0xb6a <sqrt>
     460:	dc 01       	movw	r26, r24
     462:	cb 01       	movw	r24, r22
     464:	bc 01       	movw	r22, r24
     466:	cd 01       	movw	r24, r26
     468:	32 d2       	rcall	.+1124   	; 0x8ce <__fixsfsi>
     46a:	dc 01       	movw	r26, r24
     46c:	cb 01       	movw	r24, r22
}
     46e:	2c 96       	adiw	r28, 0x0c	; 12
     470:	0f b6       	in	r0, 0x3f	; 63
     472:	f8 94       	cli
     474:	de bf       	out	0x3e, r29	; 62
     476:	0f be       	out	0x3f, r0	; 63
     478:	cd bf       	out	0x3d, r28	; 61
     47a:	df 91       	pop	r29
     47c:	cf 91       	pop	r28
     47e:	08 95       	ret

00000480 <main>:

int main( void ){
     480:	0f 93       	push	r16
     482:	1f 93       	push	r17
     484:	cf 93       	push	r28
     486:	df 93       	push	r29
     488:	cd b7       	in	r28, 0x3d	; 61
     48a:	de b7       	in	r29, 0x3e	; 62
     48c:	c3 57       	subi	r28, 0x73	; 115
     48e:	d1 09       	sbc	r29, r1
     490:	0f b6       	in	r0, 0x3f	; 63
     492:	f8 94       	cli
     494:	de bf       	out	0x3e, r29	; 62
     496:	0f be       	out	0x3f, r0	; 63
	adc_init();
     498:	cd bf       	out	0x3d, r28	; 61
     49a:	c1 de       	rcall	.-638    	; 0x21e <_Z8adc_initv>
	USART_Init(MYUBRR);
     49c:	87 e6       	ldi	r24, 0x67	; 103
     49e:	90 e0       	ldi	r25, 0x00	; 0

	while(true){
		digital_value = RMS(30);
     4a0:	1a df       	rcall	.-460    	; 0x2d6 <_Z10USART_Initj>
     4a2:	8e e1       	ldi	r24, 0x1E	; 30
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	68 df       	rcall	.-304    	; 0x378 <_Z3RMSi>
     4a8:	09 2e       	mov	r0, r25
     4aa:	00 0c       	add	r0, r0
     4ac:	aa 0b       	sbc	r26, r26
     4ae:	bb 0b       	sbc	r27, r27
     4b0:	bc 01       	movw	r22, r24
     4b2:	cd 01       	movw	r24, r26
     4b4:	3f d2       	rcall	.+1150   	; 0x934 <__floatsisf>
     4b6:	dc 01       	movw	r26, r24
     4b8:	cb 01       	movw	r24, r22
     4ba:	80 93 26 02 	sts	0x0226, r24	; 0x800226 <digital_value>
     4be:	90 93 27 02 	sts	0x0227, r25	; 0x800227 <digital_value+0x1>
     4c2:	a0 93 28 02 	sts	0x0228, r26	; 0x800228 <digital_value+0x2>
     4c6:	b0 93 29 02 	sts	0x0229, r27	; 0x800229 <digital_value+0x3>
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	aa ef       	ldi	r26, 0xFA	; 250
     4d0:	b4 e4       	ldi	r27, 0x44	; 68
     4d2:	89 87       	std	Y+9, r24	; 0x09
     4d4:	9a 87       	std	Y+10, r25	; 0x0a
     4d6:	ab 87       	std	Y+11, r26	; 0x0b
     4d8:	bc 87       	std	Y+12, r27	; 0x0c

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	4a e7       	ldi	r20, 0x7A	; 122
     4e0:	55 e4       	ldi	r21, 0x45	; 69
     4e2:	69 85       	ldd	r22, Y+9	; 0x09
     4e4:	7a 85       	ldd	r23, Y+10	; 0x0a
     4e6:	8b 85       	ldd	r24, Y+11	; 0x0b
     4e8:	9c 85       	ldd	r25, Y+12	; 0x0c
     4ea:	d8 d2       	rcall	.+1456   	; 0xa9c <__mulsf3>
     4ec:	dc 01       	movw	r26, r24
     4ee:	cb 01       	movw	r24, r22
     4f0:	8d 87       	std	Y+13, r24	; 0x0d
     4f2:	9e 87       	std	Y+14, r25	; 0x0e
     4f4:	af 87       	std	Y+15, r26	; 0x0f
     4f6:	b8 8b       	std	Y+16, r27	; 0x10
	if (__tmp < 1.0)
     4f8:	20 e0       	ldi	r18, 0x00	; 0
     4fa:	30 e0       	ldi	r19, 0x00	; 0
     4fc:	40 e8       	ldi	r20, 0x80	; 128
     4fe:	5f e3       	ldi	r21, 0x3F	; 63
     500:	6d 85       	ldd	r22, Y+13	; 0x0d
     502:	7e 85       	ldd	r23, Y+14	; 0x0e
     504:	8f 85       	ldd	r24, Y+15	; 0x0f
     506:	98 89       	ldd	r25, Y+16	; 0x10
     508:	76 d1       	rcall	.+748    	; 0x7f6 <__cmpsf2>
     50a:	88 23       	and	r24, r24
     50c:	2c f4       	brge	.+10     	; 0x518 <main+0x98>
		__ticks = 1;
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	9a 8b       	std	Y+18, r25	; 0x12
     514:	89 8b       	std	Y+17, r24	; 0x11
     516:	3a c0       	rjmp	.+116    	; 0x58c <main+0x10c>
	else if (__tmp > 65535)
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	3f ef       	ldi	r19, 0xFF	; 255
     51c:	4f e7       	ldi	r20, 0x7F	; 127
     51e:	57 e4       	ldi	r21, 0x47	; 71
     520:	6d 85       	ldd	r22, Y+13	; 0x0d
     522:	7e 85       	ldd	r23, Y+14	; 0x0e
     524:	8f 85       	ldd	r24, Y+15	; 0x0f
     526:	98 89       	ldd	r25, Y+16	; 0x10
     528:	b5 d2       	rcall	.+1386   	; 0xa94 <__gesf2>
     52a:	18 16       	cp	r1, r24
     52c:	34 f5       	brge	.+76     	; 0x57a <main+0xfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     52e:	20 e0       	ldi	r18, 0x00	; 0
     530:	30 e0       	ldi	r19, 0x00	; 0
     532:	40 e2       	ldi	r20, 0x20	; 32
     534:	51 e4       	ldi	r21, 0x41	; 65
     536:	69 85       	ldd	r22, Y+9	; 0x09
     538:	7a 85       	ldd	r23, Y+10	; 0x0a
     53a:	8b 85       	ldd	r24, Y+11	; 0x0b
     53c:	9c 85       	ldd	r25, Y+12	; 0x0c
     53e:	ae d2       	rcall	.+1372   	; 0xa9c <__mulsf3>
     540:	dc 01       	movw	r26, r24
     542:	cb 01       	movw	r24, r22
     544:	bc 01       	movw	r22, r24
     546:	cd 01       	movw	r24, r26
     548:	c7 d1       	rcall	.+910    	; 0x8d8 <__fixunssfsi>
     54a:	dc 01       	movw	r26, r24
     54c:	cb 01       	movw	r24, r22
     54e:	9a 8b       	std	Y+18, r25	; 0x12
     550:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
     552:	89 89       	ldd	r24, Y+17	; 0x11
     554:	9a 89       	ldd	r25, Y+18	; 0x12
     556:	89 2b       	or	r24, r25
     558:	19 f1       	breq	.+70     	; 0x5a0 <main+0x120>
     55a:	80 e9       	ldi	r24, 0x90	; 144
     55c:	91 e0       	ldi	r25, 0x01	; 1
     55e:	9c 8b       	std	Y+20, r25	; 0x14
     560:	8b 8b       	std	Y+19, r24	; 0x13
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     562:	8b 89       	ldd	r24, Y+19	; 0x13
     564:	9c 89       	ldd	r25, Y+20	; 0x14
     566:	01 97       	sbiw	r24, 0x01	; 1
     568:	f1 f7       	brne	.-4      	; 0x566 <main+0xe6>
     56a:	9c 8b       	std	Y+20, r25	; 0x14
     56c:	8b 8b       	std	Y+19, r24	; 0x13
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     56e:	89 89       	ldd	r24, Y+17	; 0x11
     570:	9a 89       	ldd	r25, Y+18	; 0x12
     572:	01 97       	sbiw	r24, 0x01	; 1
     574:	9a 8b       	std	Y+18, r25	; 0x12
     576:	89 8b       	std	Y+17, r24	; 0x11
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     578:	ec cf       	rjmp	.-40     	; 0x552 <main+0xd2>
     57a:	6d 85       	ldd	r22, Y+13	; 0x0d
     57c:	7e 85       	ldd	r23, Y+14	; 0x0e
     57e:	8f 85       	ldd	r24, Y+15	; 0x0f
     580:	98 89       	ldd	r25, Y+16	; 0x10
     582:	aa d1       	rcall	.+852    	; 0x8d8 <__fixunssfsi>
     584:	dc 01       	movw	r26, r24
     586:	cb 01       	movw	r24, r22
     588:	9a 8b       	std	Y+18, r25	; 0x12
     58a:	89 8b       	std	Y+17, r24	; 0x11
     58c:	89 89       	ldd	r24, Y+17	; 0x11
     58e:	9a 89       	ldd	r25, Y+18	; 0x12
     590:	9e 8b       	std	Y+22, r25	; 0x16
     592:	8d 8b       	std	Y+21, r24	; 0x15
     594:	8d 89       	ldd	r24, Y+21	; 0x15
     596:	9e 89       	ldd	r25, Y+22	; 0x16
     598:	01 97       	sbiw	r24, 0x01	; 1
     59a:	f1 f7       	brne	.-4      	; 0x598 <main+0x118>
     59c:	9e 8b       	std	Y+22, r25	; 0x16
     59e:	8d 8b       	std	Y+21, r24	; 0x15

		_delay_ms(2000);

		analog_value = (digital_value*5)/1024;
     5a0:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <digital_value>
     5a4:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <digital_value+0x1>
     5a8:	a0 91 28 02 	lds	r26, 0x0228	; 0x800228 <digital_value+0x2>
     5ac:	b0 91 29 02 	lds	r27, 0x0229	; 0x800229 <digital_value+0x3>
     5b0:	20 e0       	ldi	r18, 0x00	; 0
     5b2:	30 e0       	ldi	r19, 0x00	; 0
     5b4:	40 ea       	ldi	r20, 0xA0	; 160
     5b6:	50 e4       	ldi	r21, 0x40	; 64
     5b8:	bc 01       	movw	r22, r24
     5ba:	cd 01       	movw	r24, r26
     5bc:	6f d2       	rcall	.+1246   	; 0xa9c <__mulsf3>
     5be:	dc 01       	movw	r26, r24
     5c0:	cb 01       	movw	r24, r22
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	40 e8       	ldi	r20, 0x80	; 128
     5c8:	54 e4       	ldi	r21, 0x44	; 68
     5ca:	bc 01       	movw	r22, r24
     5cc:	cd 01       	movw	r24, r26
     5ce:	17 d1       	rcall	.+558    	; 0x7fe <__divsf3>
     5d0:	dc 01       	movw	r26, r24
     5d2:	cb 01       	movw	r24, r22
     5d4:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <__data_end>
     5d8:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <__data_end+0x1>
     5dc:	a0 93 24 02 	sts	0x0224, r26	; 0x800224 <__data_end+0x2>
     5e0:	b0 93 25 02 	sts	0x0225, r27	; 0x800225 <__data_end+0x3>

		char digital[10];
		char analog[50];

		dtostrf(digital_value, 5, 0, digital);
     5e4:	80 91 26 02 	lds	r24, 0x0226	; 0x800226 <digital_value>
     5e8:	90 91 27 02 	lds	r25, 0x0227	; 0x800227 <digital_value+0x1>
     5ec:	a0 91 28 02 	lds	r26, 0x0228	; 0x800228 <digital_value+0x2>
     5f0:	b0 91 29 02 	lds	r27, 0x0229	; 0x800229 <digital_value+0x3>
     5f4:	9e 01       	movw	r18, r28
     5f6:	29 5e       	subi	r18, 0xE9	; 233
     5f8:	3f 4f       	sbci	r19, 0xFF	; 255
     5fa:	89 01       	movw	r16, r18
     5fc:	20 e0       	ldi	r18, 0x00	; 0
     5fe:	45 e0       	ldi	r20, 0x05	; 5
     600:	bc 01       	movw	r22, r24
     602:	cd 01       	movw	r24, r26
     604:	05 d3       	rcall	.+1546   	; 0xc10 <dtostrf>
		dtostrf(analog_value, 3, 3, analog);
     606:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <__data_end>
     60a:	90 91 23 02 	lds	r25, 0x0223	; 0x800223 <__data_end+0x1>
     60e:	a0 91 24 02 	lds	r26, 0x0224	; 0x800224 <__data_end+0x2>
     612:	b0 91 25 02 	lds	r27, 0x0225	; 0x800225 <__data_end+0x3>
     616:	9e 01       	movw	r18, r28
     618:	2e 5b       	subi	r18, 0xBE	; 190
     61a:	3f 4f       	sbci	r19, 0xFF	; 255
     61c:	89 01       	movw	r16, r18
     61e:	23 e0       	ldi	r18, 0x03	; 3
     620:	43 e0       	ldi	r20, 0x03	; 3
     622:	bc 01       	movw	r22, r24
     624:	cd 01       	movw	r24, r26
     626:	f4 d2       	rcall	.+1512   	; 0xc10 <dtostrf>

		char label_d[20] = "Digital: ";
     628:	8a e0       	ldi	r24, 0x0A	; 10
     62a:	e1 e0       	ldi	r30, 0x01	; 1
     62c:	f2 e0       	ldi	r31, 0x02	; 2
     62e:	de 01       	movw	r26, r28
     630:	91 96       	adiw	r26, 0x21	; 33
     632:	01 90       	ld	r0, Z+
     634:	0d 92       	st	X+, r0
     636:	8a 95       	dec	r24
     638:	e1 f7       	brne	.-8      	; 0x632 <main+0x1b2>
     63a:	2a e0       	ldi	r18, 0x0A	; 10
     63c:	ce 01       	movw	r24, r28
     63e:	8b 96       	adiw	r24, 0x2b	; 43
     640:	fc 01       	movw	r30, r24
     642:	32 2f       	mov	r19, r18
     644:	11 92       	st	Z+, r1
     646:	3a 95       	dec	r19
     648:	e9 f7       	brne	.-6      	; 0x644 <main+0x1c4>

		for (int i = 0; i < 9; i++){
     64a:	1a 82       	std	Y+2, r1	; 0x02
     64c:	19 82       	std	Y+1, r1	; 0x01
     64e:	89 81       	ldd	r24, Y+1	; 0x01
     650:	9a 81       	ldd	r25, Y+2	; 0x02
     652:	09 97       	sbiw	r24, 0x09	; 9
			USART_Transmit((uint8_t)label_d[i]);
     654:	84 f4       	brge	.+32     	; 0x676 <main+0x1f6>
     656:	9e 01       	movw	r18, r28
     658:	2f 5d       	subi	r18, 0xDF	; 223
     65a:	3f 4f       	sbci	r19, 0xFF	; 255
     65c:	89 81       	ldd	r24, Y+1	; 0x01
     65e:	9a 81       	ldd	r25, Y+2	; 0x02
     660:	82 0f       	add	r24, r18
     662:	93 1f       	adc	r25, r19
     664:	fc 01       	movw	r30, r24
     666:	80 81       	ld	r24, Z
     668:	68 de       	rcall	.-816    	; 0x33a <_Z14USART_Transmith>
		dtostrf(digital_value, 5, 0, digital);
		dtostrf(analog_value, 3, 3, analog);

		char label_d[20] = "Digital: ";

		for (int i = 0; i < 9; i++){
     66a:	89 81       	ldd	r24, Y+1	; 0x01
     66c:	9a 81       	ldd	r25, Y+2	; 0x02
     66e:	01 96       	adiw	r24, 0x01	; 1
     670:	9a 83       	std	Y+2, r25	; 0x02
     672:	89 83       	std	Y+1, r24	; 0x01
     674:	ec cf       	rjmp	.-40     	; 0x64e <main+0x1ce>
			USART_Transmit((uint8_t)label_d[i]);
		}

		for (int i = 1; i < 5; i++){
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	90 e0       	ldi	r25, 0x00	; 0
     67a:	9c 83       	std	Y+4, r25	; 0x04
     67c:	8b 83       	std	Y+3, r24	; 0x03
     67e:	8b 81       	ldd	r24, Y+3	; 0x03
     680:	9c 81       	ldd	r25, Y+4	; 0x04
     682:	05 97       	sbiw	r24, 0x05	; 5
			USART_Transmit((uint8_t)digital[i]);
     684:	84 f4       	brge	.+32     	; 0x6a6 <main+0x226>
     686:	9e 01       	movw	r18, r28
     688:	29 5e       	subi	r18, 0xE9	; 233
     68a:	3f 4f       	sbci	r19, 0xFF	; 255
     68c:	8b 81       	ldd	r24, Y+3	; 0x03
     68e:	9c 81       	ldd	r25, Y+4	; 0x04
     690:	82 0f       	add	r24, r18
     692:	93 1f       	adc	r25, r19
     694:	fc 01       	movw	r30, r24
     696:	80 81       	ld	r24, Z

		for (int i = 0; i < 9; i++){
			USART_Transmit((uint8_t)label_d[i]);
		}

		for (int i = 1; i < 5; i++){
     698:	50 de       	rcall	.-864    	; 0x33a <_Z14USART_Transmith>
     69a:	8b 81       	ldd	r24, Y+3	; 0x03
     69c:	9c 81       	ldd	r25, Y+4	; 0x04
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	9c 83       	std	Y+4, r25	; 0x04
     6a2:	8b 83       	std	Y+3, r24	; 0x03
			USART_Transmit((uint8_t)digital[i]);
		}

		USART_Transmit((uint8_t)32);
     6a4:	ec cf       	rjmp	.-40     	; 0x67e <main+0x1fe>
     6a6:	80 e2       	ldi	r24, 0x20	; 32
     6a8:	48 de       	rcall	.-880    	; 0x33a <_Z14USART_Transmith>

		char label_a[13] = "Analogico: ";
     6aa:	8c e0       	ldi	r24, 0x0C	; 12
     6ac:	e5 e1       	ldi	r30, 0x15	; 21
     6ae:	f2 e0       	ldi	r31, 0x02	; 2
     6b0:	de 01       	movw	r26, r28
     6b2:	d5 96       	adiw	r26, 0x35	; 53
     6b4:	01 90       	ld	r0, Z+
     6b6:	0d 92       	st	X+, r0
     6b8:	8a 95       	dec	r24
     6ba:	e1 f7       	brne	.-8      	; 0x6b4 <main+0x234>
     6bc:	ce 01       	movw	r24, r28
     6be:	8f 5b       	subi	r24, 0xBF	; 191
     6c0:	9f 4f       	sbci	r25, 0xFF	; 255
     6c2:	fc 01       	movw	r30, r24

		for (int i = 0; i < 11; i++){
     6c4:	10 82       	st	Z, r1
     6c6:	1e 82       	std	Y+6, r1	; 0x06
     6c8:	1d 82       	std	Y+5, r1	; 0x05
     6ca:	8d 81       	ldd	r24, Y+5	; 0x05
     6cc:	9e 81       	ldd	r25, Y+6	; 0x06
     6ce:	0b 97       	sbiw	r24, 0x0b	; 11
			USART_Transmit((uint8_t)label_a[i]);
     6d0:	84 f4       	brge	.+32     	; 0x6f2 <main+0x272>
     6d2:	9e 01       	movw	r18, r28
     6d4:	2b 5c       	subi	r18, 0xCB	; 203
     6d6:	3f 4f       	sbci	r19, 0xFF	; 255
     6d8:	8d 81       	ldd	r24, Y+5	; 0x05
     6da:	9e 81       	ldd	r25, Y+6	; 0x06
     6dc:	82 0f       	add	r24, r18
     6de:	93 1f       	adc	r25, r19
     6e0:	fc 01       	movw	r30, r24
     6e2:	80 81       	ld	r24, Z
     6e4:	2a de       	rcall	.-940    	; 0x33a <_Z14USART_Transmith>

		USART_Transmit((uint8_t)32);

		char label_a[13] = "Analogico: ";

		for (int i = 0; i < 11; i++){
     6e6:	8d 81       	ldd	r24, Y+5	; 0x05
     6e8:	9e 81       	ldd	r25, Y+6	; 0x06
     6ea:	01 96       	adiw	r24, 0x01	; 1
     6ec:	9e 83       	std	Y+6, r25	; 0x06
     6ee:	8d 83       	std	Y+5, r24	; 0x05
			USART_Transmit((uint8_t)label_a[i]);
		}

		for (int i = 0; i < 4; i++){
     6f0:	ec cf       	rjmp	.-40     	; 0x6ca <main+0x24a>
     6f2:	18 86       	std	Y+8, r1	; 0x08
     6f4:	1f 82       	std	Y+7, r1	; 0x07
     6f6:	8f 81       	ldd	r24, Y+7	; 0x07
     6f8:	98 85       	ldd	r25, Y+8	; 0x08
			USART_Transmit((uint8_t)analog[i]);
     6fa:	04 97       	sbiw	r24, 0x04	; 4
     6fc:	84 f4       	brge	.+32     	; 0x71e <main+0x29e>
     6fe:	9e 01       	movw	r18, r28
     700:	2e 5b       	subi	r18, 0xBE	; 190
     702:	3f 4f       	sbci	r19, 0xFF	; 255
     704:	8f 81       	ldd	r24, Y+7	; 0x07
     706:	98 85       	ldd	r25, Y+8	; 0x08
     708:	82 0f       	add	r24, r18
     70a:	93 1f       	adc	r25, r19

		for (int i = 0; i < 11; i++){
			USART_Transmit((uint8_t)label_a[i]);
		}

		for (int i = 0; i < 4; i++){
     70c:	fc 01       	movw	r30, r24
     70e:	80 81       	ld	r24, Z
     710:	14 de       	rcall	.-984    	; 0x33a <_Z14USART_Transmith>
     712:	8f 81       	ldd	r24, Y+7	; 0x07
     714:	98 85       	ldd	r25, Y+8	; 0x08
     716:	01 96       	adiw	r24, 0x01	; 1
			USART_Transmit((uint8_t)analog[i]);
		}

		USART_Transmit((uint8_t)32);
     718:	98 87       	std	Y+8, r25	; 0x08
     71a:	8f 83       	std	Y+7, r24	; 0x07
     71c:	ec cf       	rjmp	.-40     	; 0x6f6 <main+0x276>
		USART_Transmit((uint8_t)124);
     71e:	80 e2       	ldi	r24, 0x20	; 32
     720:	0c de       	rcall	.-1000   	; 0x33a <_Z14USART_Transmith>
     722:	8c e7       	ldi	r24, 0x7C	; 124
		USART_Transmit((uint8_t)32);
     724:	0a de       	rcall	.-1004   	; 0x33a <_Z14USART_Transmith>
     726:	80 e2       	ldi	r24, 0x20	; 32
     728:	08 de       	rcall	.-1008   	; 0x33a <_Z14USART_Transmith>

int main( void ){
	adc_init();
	USART_Init(MYUBRR);

	while(true){
     72a:	bb ce       	rjmp	.-650    	; 0x4a2 <main+0x22>

0000072c <__subsf3>:
     72c:	50 58       	subi	r21, 0x80	; 128

0000072e <__addsf3>:
     72e:	bb 27       	eor	r27, r27
     730:	aa 27       	eor	r26, r26
     732:	0e d0       	rcall	.+28     	; 0x750 <__addsf3x>
     734:	75 c1       	rjmp	.+746    	; 0xa20 <__fp_round>
     736:	66 d1       	rcall	.+716    	; 0xa04 <__fp_pscA>
     738:	30 f0       	brcs	.+12     	; 0x746 <__addsf3+0x18>
     73a:	6b d1       	rcall	.+726    	; 0xa12 <__fp_pscB>
     73c:	20 f0       	brcs	.+8      	; 0x746 <__addsf3+0x18>
     73e:	31 f4       	brne	.+12     	; 0x74c <__addsf3+0x1e>
     740:	9f 3f       	cpi	r25, 0xFF	; 255
     742:	11 f4       	brne	.+4      	; 0x748 <__addsf3+0x1a>
     744:	1e f4       	brtc	.+6      	; 0x74c <__addsf3+0x1e>
     746:	5b c1       	rjmp	.+694    	; 0x9fe <__fp_nan>
     748:	0e f4       	brtc	.+2      	; 0x74c <__addsf3+0x1e>
     74a:	e0 95       	com	r30
     74c:	e7 fb       	bst	r30, 7
     74e:	51 c1       	rjmp	.+674    	; 0x9f2 <__fp_inf>

00000750 <__addsf3x>:
     750:	e9 2f       	mov	r30, r25
     752:	77 d1       	rcall	.+750    	; 0xa42 <__fp_split3>
     754:	80 f3       	brcs	.-32     	; 0x736 <__addsf3+0x8>
     756:	ba 17       	cp	r27, r26
     758:	62 07       	cpc	r22, r18
     75a:	73 07       	cpc	r23, r19
     75c:	84 07       	cpc	r24, r20
     75e:	95 07       	cpc	r25, r21
     760:	18 f0       	brcs	.+6      	; 0x768 <__addsf3x+0x18>
     762:	71 f4       	brne	.+28     	; 0x780 <__addsf3x+0x30>
     764:	9e f5       	brtc	.+102    	; 0x7cc <__addsf3x+0x7c>
     766:	8f c1       	rjmp	.+798    	; 0xa86 <__fp_zero>
     768:	0e f4       	brtc	.+2      	; 0x76c <__addsf3x+0x1c>
     76a:	e0 95       	com	r30
     76c:	0b 2e       	mov	r0, r27
     76e:	ba 2f       	mov	r27, r26
     770:	a0 2d       	mov	r26, r0
     772:	0b 01       	movw	r0, r22
     774:	b9 01       	movw	r22, r18
     776:	90 01       	movw	r18, r0
     778:	0c 01       	movw	r0, r24
     77a:	ca 01       	movw	r24, r20
     77c:	a0 01       	movw	r20, r0
     77e:	11 24       	eor	r1, r1
     780:	ff 27       	eor	r31, r31
     782:	59 1b       	sub	r21, r25
     784:	99 f0       	breq	.+38     	; 0x7ac <__addsf3x+0x5c>
     786:	59 3f       	cpi	r21, 0xF9	; 249
     788:	50 f4       	brcc	.+20     	; 0x79e <__addsf3x+0x4e>
     78a:	50 3e       	cpi	r21, 0xE0	; 224
     78c:	68 f1       	brcs	.+90     	; 0x7e8 <__addsf3x+0x98>
     78e:	1a 16       	cp	r1, r26
     790:	f0 40       	sbci	r31, 0x00	; 0
     792:	a2 2f       	mov	r26, r18
     794:	23 2f       	mov	r18, r19
     796:	34 2f       	mov	r19, r20
     798:	44 27       	eor	r20, r20
     79a:	58 5f       	subi	r21, 0xF8	; 248
     79c:	f3 cf       	rjmp	.-26     	; 0x784 <__addsf3x+0x34>
     79e:	46 95       	lsr	r20
     7a0:	37 95       	ror	r19
     7a2:	27 95       	ror	r18
     7a4:	a7 95       	ror	r26
     7a6:	f0 40       	sbci	r31, 0x00	; 0
     7a8:	53 95       	inc	r21
     7aa:	c9 f7       	brne	.-14     	; 0x79e <__addsf3x+0x4e>
     7ac:	7e f4       	brtc	.+30     	; 0x7cc <__addsf3x+0x7c>
     7ae:	1f 16       	cp	r1, r31
     7b0:	ba 0b       	sbc	r27, r26
     7b2:	62 0b       	sbc	r22, r18
     7b4:	73 0b       	sbc	r23, r19
     7b6:	84 0b       	sbc	r24, r20
     7b8:	ba f0       	brmi	.+46     	; 0x7e8 <__addsf3x+0x98>
     7ba:	91 50       	subi	r25, 0x01	; 1
     7bc:	a1 f0       	breq	.+40     	; 0x7e6 <__addsf3x+0x96>
     7be:	ff 0f       	add	r31, r31
     7c0:	bb 1f       	adc	r27, r27
     7c2:	66 1f       	adc	r22, r22
     7c4:	77 1f       	adc	r23, r23
     7c6:	88 1f       	adc	r24, r24
     7c8:	c2 f7       	brpl	.-16     	; 0x7ba <__addsf3x+0x6a>
     7ca:	0e c0       	rjmp	.+28     	; 0x7e8 <__addsf3x+0x98>
     7cc:	ba 0f       	add	r27, r26
     7ce:	62 1f       	adc	r22, r18
     7d0:	73 1f       	adc	r23, r19
     7d2:	84 1f       	adc	r24, r20
     7d4:	48 f4       	brcc	.+18     	; 0x7e8 <__addsf3x+0x98>
     7d6:	87 95       	ror	r24
     7d8:	77 95       	ror	r23
     7da:	67 95       	ror	r22
     7dc:	b7 95       	ror	r27
     7de:	f7 95       	ror	r31
     7e0:	9e 3f       	cpi	r25, 0xFE	; 254
     7e2:	08 f0       	brcs	.+2      	; 0x7e6 <__addsf3x+0x96>
     7e4:	b3 cf       	rjmp	.-154    	; 0x74c <__addsf3+0x1e>
     7e6:	93 95       	inc	r25
     7e8:	88 0f       	add	r24, r24
     7ea:	08 f0       	brcs	.+2      	; 0x7ee <__addsf3x+0x9e>
     7ec:	99 27       	eor	r25, r25
     7ee:	ee 0f       	add	r30, r30
     7f0:	97 95       	ror	r25
     7f2:	87 95       	ror	r24
     7f4:	08 95       	ret

000007f6 <__cmpsf2>:
     7f6:	d9 d0       	rcall	.+434    	; 0x9aa <__fp_cmp>
     7f8:	08 f4       	brcc	.+2      	; 0x7fc <__cmpsf2+0x6>
     7fa:	81 e0       	ldi	r24, 0x01	; 1
     7fc:	08 95       	ret

000007fe <__divsf3>:
     7fe:	0c d0       	rcall	.+24     	; 0x818 <__divsf3x>
     800:	0f c1       	rjmp	.+542    	; 0xa20 <__fp_round>
     802:	07 d1       	rcall	.+526    	; 0xa12 <__fp_pscB>
     804:	40 f0       	brcs	.+16     	; 0x816 <__divsf3+0x18>
     806:	fe d0       	rcall	.+508    	; 0xa04 <__fp_pscA>
     808:	30 f0       	brcs	.+12     	; 0x816 <__divsf3+0x18>
     80a:	21 f4       	brne	.+8      	; 0x814 <__divsf3+0x16>
     80c:	5f 3f       	cpi	r21, 0xFF	; 255
     80e:	19 f0       	breq	.+6      	; 0x816 <__divsf3+0x18>
     810:	f0 c0       	rjmp	.+480    	; 0x9f2 <__fp_inf>
     812:	51 11       	cpse	r21, r1
     814:	39 c1       	rjmp	.+626    	; 0xa88 <__fp_szero>
     816:	f3 c0       	rjmp	.+486    	; 0x9fe <__fp_nan>

00000818 <__divsf3x>:
     818:	14 d1       	rcall	.+552    	; 0xa42 <__fp_split3>
     81a:	98 f3       	brcs	.-26     	; 0x802 <__divsf3+0x4>

0000081c <__divsf3_pse>:
     81c:	99 23       	and	r25, r25
     81e:	c9 f3       	breq	.-14     	; 0x812 <__divsf3+0x14>
     820:	55 23       	and	r21, r21
     822:	b1 f3       	breq	.-20     	; 0x810 <__divsf3+0x12>
     824:	95 1b       	sub	r25, r21
     826:	55 0b       	sbc	r21, r21
     828:	bb 27       	eor	r27, r27
     82a:	aa 27       	eor	r26, r26
     82c:	62 17       	cp	r22, r18
     82e:	73 07       	cpc	r23, r19
     830:	84 07       	cpc	r24, r20
     832:	38 f0       	brcs	.+14     	; 0x842 <__divsf3_pse+0x26>
     834:	9f 5f       	subi	r25, 0xFF	; 255
     836:	5f 4f       	sbci	r21, 0xFF	; 255
     838:	22 0f       	add	r18, r18
     83a:	33 1f       	adc	r19, r19
     83c:	44 1f       	adc	r20, r20
     83e:	aa 1f       	adc	r26, r26
     840:	a9 f3       	breq	.-22     	; 0x82c <__divsf3_pse+0x10>
     842:	33 d0       	rcall	.+102    	; 0x8aa <__divsf3_pse+0x8e>
     844:	0e 2e       	mov	r0, r30
     846:	3a f0       	brmi	.+14     	; 0x856 <__divsf3_pse+0x3a>
     848:	e0 e8       	ldi	r30, 0x80	; 128
     84a:	30 d0       	rcall	.+96     	; 0x8ac <__divsf3_pse+0x90>
     84c:	91 50       	subi	r25, 0x01	; 1
     84e:	50 40       	sbci	r21, 0x00	; 0
     850:	e6 95       	lsr	r30
     852:	00 1c       	adc	r0, r0
     854:	ca f7       	brpl	.-14     	; 0x848 <__divsf3_pse+0x2c>
     856:	29 d0       	rcall	.+82     	; 0x8aa <__divsf3_pse+0x8e>
     858:	fe 2f       	mov	r31, r30
     85a:	27 d0       	rcall	.+78     	; 0x8aa <__divsf3_pse+0x8e>
     85c:	66 0f       	add	r22, r22
     85e:	77 1f       	adc	r23, r23
     860:	88 1f       	adc	r24, r24
     862:	bb 1f       	adc	r27, r27
     864:	26 17       	cp	r18, r22
     866:	37 07       	cpc	r19, r23
     868:	48 07       	cpc	r20, r24
     86a:	ab 07       	cpc	r26, r27
     86c:	b0 e8       	ldi	r27, 0x80	; 128
     86e:	09 f0       	breq	.+2      	; 0x872 <__divsf3_pse+0x56>
     870:	bb 0b       	sbc	r27, r27
     872:	80 2d       	mov	r24, r0
     874:	bf 01       	movw	r22, r30
     876:	ff 27       	eor	r31, r31
     878:	93 58       	subi	r25, 0x83	; 131
     87a:	5f 4f       	sbci	r21, 0xFF	; 255
     87c:	2a f0       	brmi	.+10     	; 0x888 <__divsf3_pse+0x6c>
     87e:	9e 3f       	cpi	r25, 0xFE	; 254
     880:	51 05       	cpc	r21, r1
     882:	68 f0       	brcs	.+26     	; 0x89e <__divsf3_pse+0x82>
     884:	b6 c0       	rjmp	.+364    	; 0x9f2 <__fp_inf>
     886:	00 c1       	rjmp	.+512    	; 0xa88 <__fp_szero>
     888:	5f 3f       	cpi	r21, 0xFF	; 255
     88a:	ec f3       	brlt	.-6      	; 0x886 <__divsf3_pse+0x6a>
     88c:	98 3e       	cpi	r25, 0xE8	; 232
     88e:	dc f3       	brlt	.-10     	; 0x886 <__divsf3_pse+0x6a>
     890:	86 95       	lsr	r24
     892:	77 95       	ror	r23
     894:	67 95       	ror	r22
     896:	b7 95       	ror	r27
     898:	f7 95       	ror	r31
     89a:	9f 5f       	subi	r25, 0xFF	; 255
     89c:	c9 f7       	brne	.-14     	; 0x890 <__divsf3_pse+0x74>
     89e:	88 0f       	add	r24, r24
     8a0:	91 1d       	adc	r25, r1
     8a2:	96 95       	lsr	r25
     8a4:	87 95       	ror	r24
     8a6:	97 f9       	bld	r25, 7
     8a8:	08 95       	ret
     8aa:	e1 e0       	ldi	r30, 0x01	; 1
     8ac:	66 0f       	add	r22, r22
     8ae:	77 1f       	adc	r23, r23
     8b0:	88 1f       	adc	r24, r24
     8b2:	bb 1f       	adc	r27, r27
     8b4:	62 17       	cp	r22, r18
     8b6:	73 07       	cpc	r23, r19
     8b8:	84 07       	cpc	r24, r20
     8ba:	ba 07       	cpc	r27, r26
     8bc:	20 f0       	brcs	.+8      	; 0x8c6 <__divsf3_pse+0xaa>
     8be:	62 1b       	sub	r22, r18
     8c0:	73 0b       	sbc	r23, r19
     8c2:	84 0b       	sbc	r24, r20
     8c4:	ba 0b       	sbc	r27, r26
     8c6:	ee 1f       	adc	r30, r30
     8c8:	88 f7       	brcc	.-30     	; 0x8ac <__divsf3_pse+0x90>
     8ca:	e0 95       	com	r30
     8cc:	08 95       	ret

000008ce <__fixsfsi>:
     8ce:	04 d0       	rcall	.+8      	; 0x8d8 <__fixunssfsi>
     8d0:	68 94       	set
     8d2:	b1 11       	cpse	r27, r1
     8d4:	d9 c0       	rjmp	.+434    	; 0xa88 <__fp_szero>
     8d6:	08 95       	ret

000008d8 <__fixunssfsi>:
     8d8:	bc d0       	rcall	.+376    	; 0xa52 <__fp_splitA>
     8da:	88 f0       	brcs	.+34     	; 0x8fe <__fixunssfsi+0x26>
     8dc:	9f 57       	subi	r25, 0x7F	; 127
     8de:	90 f0       	brcs	.+36     	; 0x904 <__fixunssfsi+0x2c>
     8e0:	b9 2f       	mov	r27, r25
     8e2:	99 27       	eor	r25, r25
     8e4:	b7 51       	subi	r27, 0x17	; 23
     8e6:	a0 f0       	brcs	.+40     	; 0x910 <__fixunssfsi+0x38>
     8e8:	d1 f0       	breq	.+52     	; 0x91e <__fixunssfsi+0x46>
     8ea:	66 0f       	add	r22, r22
     8ec:	77 1f       	adc	r23, r23
     8ee:	88 1f       	adc	r24, r24
     8f0:	99 1f       	adc	r25, r25
     8f2:	1a f0       	brmi	.+6      	; 0x8fa <__fixunssfsi+0x22>
     8f4:	ba 95       	dec	r27
     8f6:	c9 f7       	brne	.-14     	; 0x8ea <__fixunssfsi+0x12>
     8f8:	12 c0       	rjmp	.+36     	; 0x91e <__fixunssfsi+0x46>
     8fa:	b1 30       	cpi	r27, 0x01	; 1
     8fc:	81 f0       	breq	.+32     	; 0x91e <__fixunssfsi+0x46>
     8fe:	c3 d0       	rcall	.+390    	; 0xa86 <__fp_zero>
     900:	b1 e0       	ldi	r27, 0x01	; 1
     902:	08 95       	ret
     904:	c0 c0       	rjmp	.+384    	; 0xa86 <__fp_zero>
     906:	67 2f       	mov	r22, r23
     908:	78 2f       	mov	r23, r24
     90a:	88 27       	eor	r24, r24
     90c:	b8 5f       	subi	r27, 0xF8	; 248
     90e:	39 f0       	breq	.+14     	; 0x91e <__fixunssfsi+0x46>
     910:	b9 3f       	cpi	r27, 0xF9	; 249
     912:	cc f3       	brlt	.-14     	; 0x906 <__fixunssfsi+0x2e>
     914:	86 95       	lsr	r24
     916:	77 95       	ror	r23
     918:	67 95       	ror	r22
     91a:	b3 95       	inc	r27
     91c:	d9 f7       	brne	.-10     	; 0x914 <__fixunssfsi+0x3c>
     91e:	3e f4       	brtc	.+14     	; 0x92e <__fixunssfsi+0x56>
     920:	90 95       	com	r25
     922:	80 95       	com	r24
     924:	70 95       	com	r23
     926:	61 95       	neg	r22
     928:	7f 4f       	sbci	r23, 0xFF	; 255
     92a:	8f 4f       	sbci	r24, 0xFF	; 255
     92c:	9f 4f       	sbci	r25, 0xFF	; 255
     92e:	08 95       	ret

00000930 <__floatunsisf>:
     930:	e8 94       	clt
     932:	09 c0       	rjmp	.+18     	; 0x946 <__floatsisf+0x12>

00000934 <__floatsisf>:
     934:	97 fb       	bst	r25, 7
     936:	3e f4       	brtc	.+14     	; 0x946 <__floatsisf+0x12>
     938:	90 95       	com	r25
     93a:	80 95       	com	r24
     93c:	70 95       	com	r23
     93e:	61 95       	neg	r22
     940:	7f 4f       	sbci	r23, 0xFF	; 255
     942:	8f 4f       	sbci	r24, 0xFF	; 255
     944:	9f 4f       	sbci	r25, 0xFF	; 255
     946:	99 23       	and	r25, r25
     948:	a9 f0       	breq	.+42     	; 0x974 <__floatsisf+0x40>
     94a:	f9 2f       	mov	r31, r25
     94c:	96 e9       	ldi	r25, 0x96	; 150
     94e:	bb 27       	eor	r27, r27
     950:	93 95       	inc	r25
     952:	f6 95       	lsr	r31
     954:	87 95       	ror	r24
     956:	77 95       	ror	r23
     958:	67 95       	ror	r22
     95a:	b7 95       	ror	r27
     95c:	f1 11       	cpse	r31, r1
     95e:	f8 cf       	rjmp	.-16     	; 0x950 <__floatsisf+0x1c>
     960:	fa f4       	brpl	.+62     	; 0x9a0 <__floatsisf+0x6c>
     962:	bb 0f       	add	r27, r27
     964:	11 f4       	brne	.+4      	; 0x96a <__floatsisf+0x36>
     966:	60 ff       	sbrs	r22, 0
     968:	1b c0       	rjmp	.+54     	; 0x9a0 <__floatsisf+0x6c>
     96a:	6f 5f       	subi	r22, 0xFF	; 255
     96c:	7f 4f       	sbci	r23, 0xFF	; 255
     96e:	8f 4f       	sbci	r24, 0xFF	; 255
     970:	9f 4f       	sbci	r25, 0xFF	; 255
     972:	16 c0       	rjmp	.+44     	; 0x9a0 <__floatsisf+0x6c>
     974:	88 23       	and	r24, r24
     976:	11 f0       	breq	.+4      	; 0x97c <__floatsisf+0x48>
     978:	96 e9       	ldi	r25, 0x96	; 150
     97a:	11 c0       	rjmp	.+34     	; 0x99e <__floatsisf+0x6a>
     97c:	77 23       	and	r23, r23
     97e:	21 f0       	breq	.+8      	; 0x988 <__floatsisf+0x54>
     980:	9e e8       	ldi	r25, 0x8E	; 142
     982:	87 2f       	mov	r24, r23
     984:	76 2f       	mov	r23, r22
     986:	05 c0       	rjmp	.+10     	; 0x992 <__floatsisf+0x5e>
     988:	66 23       	and	r22, r22
     98a:	71 f0       	breq	.+28     	; 0x9a8 <__floatsisf+0x74>
     98c:	96 e8       	ldi	r25, 0x86	; 134
     98e:	86 2f       	mov	r24, r22
     990:	70 e0       	ldi	r23, 0x00	; 0
     992:	60 e0       	ldi	r22, 0x00	; 0
     994:	2a f0       	brmi	.+10     	; 0x9a0 <__floatsisf+0x6c>
     996:	9a 95       	dec	r25
     998:	66 0f       	add	r22, r22
     99a:	77 1f       	adc	r23, r23
     99c:	88 1f       	adc	r24, r24
     99e:	da f7       	brpl	.-10     	; 0x996 <__floatsisf+0x62>
     9a0:	88 0f       	add	r24, r24
     9a2:	96 95       	lsr	r25
     9a4:	87 95       	ror	r24
     9a6:	97 f9       	bld	r25, 7
     9a8:	08 95       	ret

000009aa <__fp_cmp>:
     9aa:	99 0f       	add	r25, r25
     9ac:	00 08       	sbc	r0, r0
     9ae:	55 0f       	add	r21, r21
     9b0:	aa 0b       	sbc	r26, r26
     9b2:	e0 e8       	ldi	r30, 0x80	; 128
     9b4:	fe ef       	ldi	r31, 0xFE	; 254
     9b6:	16 16       	cp	r1, r22
     9b8:	17 06       	cpc	r1, r23
     9ba:	e8 07       	cpc	r30, r24
     9bc:	f9 07       	cpc	r31, r25
     9be:	c0 f0       	brcs	.+48     	; 0x9f0 <__fp_cmp+0x46>
     9c0:	12 16       	cp	r1, r18
     9c2:	13 06       	cpc	r1, r19
     9c4:	e4 07       	cpc	r30, r20
     9c6:	f5 07       	cpc	r31, r21
     9c8:	98 f0       	brcs	.+38     	; 0x9f0 <__fp_cmp+0x46>
     9ca:	62 1b       	sub	r22, r18
     9cc:	73 0b       	sbc	r23, r19
     9ce:	84 0b       	sbc	r24, r20
     9d0:	95 0b       	sbc	r25, r21
     9d2:	39 f4       	brne	.+14     	; 0x9e2 <__fp_cmp+0x38>
     9d4:	0a 26       	eor	r0, r26
     9d6:	61 f0       	breq	.+24     	; 0x9f0 <__fp_cmp+0x46>
     9d8:	23 2b       	or	r18, r19
     9da:	24 2b       	or	r18, r20
     9dc:	25 2b       	or	r18, r21
     9de:	21 f4       	brne	.+8      	; 0x9e8 <__fp_cmp+0x3e>
     9e0:	08 95       	ret
     9e2:	0a 26       	eor	r0, r26
     9e4:	09 f4       	brne	.+2      	; 0x9e8 <__fp_cmp+0x3e>
     9e6:	a1 40       	sbci	r26, 0x01	; 1
     9e8:	a6 95       	lsr	r26
     9ea:	8f ef       	ldi	r24, 0xFF	; 255
     9ec:	81 1d       	adc	r24, r1
     9ee:	81 1d       	adc	r24, r1
     9f0:	08 95       	ret

000009f2 <__fp_inf>:
     9f2:	97 f9       	bld	r25, 7
     9f4:	9f 67       	ori	r25, 0x7F	; 127
     9f6:	80 e8       	ldi	r24, 0x80	; 128
     9f8:	70 e0       	ldi	r23, 0x00	; 0
     9fa:	60 e0       	ldi	r22, 0x00	; 0
     9fc:	08 95       	ret

000009fe <__fp_nan>:
     9fe:	9f ef       	ldi	r25, 0xFF	; 255
     a00:	80 ec       	ldi	r24, 0xC0	; 192
     a02:	08 95       	ret

00000a04 <__fp_pscA>:
     a04:	00 24       	eor	r0, r0
     a06:	0a 94       	dec	r0
     a08:	16 16       	cp	r1, r22
     a0a:	17 06       	cpc	r1, r23
     a0c:	18 06       	cpc	r1, r24
     a0e:	09 06       	cpc	r0, r25
     a10:	08 95       	ret

00000a12 <__fp_pscB>:
     a12:	00 24       	eor	r0, r0
     a14:	0a 94       	dec	r0
     a16:	12 16       	cp	r1, r18
     a18:	13 06       	cpc	r1, r19
     a1a:	14 06       	cpc	r1, r20
     a1c:	05 06       	cpc	r0, r21
     a1e:	08 95       	ret

00000a20 <__fp_round>:
     a20:	09 2e       	mov	r0, r25
     a22:	03 94       	inc	r0
     a24:	00 0c       	add	r0, r0
     a26:	11 f4       	brne	.+4      	; 0xa2c <__fp_round+0xc>
     a28:	88 23       	and	r24, r24
     a2a:	52 f0       	brmi	.+20     	; 0xa40 <__fp_round+0x20>
     a2c:	bb 0f       	add	r27, r27
     a2e:	40 f4       	brcc	.+16     	; 0xa40 <__fp_round+0x20>
     a30:	bf 2b       	or	r27, r31
     a32:	11 f4       	brne	.+4      	; 0xa38 <__fp_round+0x18>
     a34:	60 ff       	sbrs	r22, 0
     a36:	04 c0       	rjmp	.+8      	; 0xa40 <__fp_round+0x20>
     a38:	6f 5f       	subi	r22, 0xFF	; 255
     a3a:	7f 4f       	sbci	r23, 0xFF	; 255
     a3c:	8f 4f       	sbci	r24, 0xFF	; 255
     a3e:	9f 4f       	sbci	r25, 0xFF	; 255
     a40:	08 95       	ret

00000a42 <__fp_split3>:
     a42:	57 fd       	sbrc	r21, 7
     a44:	90 58       	subi	r25, 0x80	; 128
     a46:	44 0f       	add	r20, r20
     a48:	55 1f       	adc	r21, r21
     a4a:	59 f0       	breq	.+22     	; 0xa62 <__fp_splitA+0x10>
     a4c:	5f 3f       	cpi	r21, 0xFF	; 255
     a4e:	71 f0       	breq	.+28     	; 0xa6c <__fp_splitA+0x1a>
     a50:	47 95       	ror	r20

00000a52 <__fp_splitA>:
     a52:	88 0f       	add	r24, r24
     a54:	97 fb       	bst	r25, 7
     a56:	99 1f       	adc	r25, r25
     a58:	61 f0       	breq	.+24     	; 0xa72 <__fp_splitA+0x20>
     a5a:	9f 3f       	cpi	r25, 0xFF	; 255
     a5c:	79 f0       	breq	.+30     	; 0xa7c <__fp_splitA+0x2a>
     a5e:	87 95       	ror	r24
     a60:	08 95       	ret
     a62:	12 16       	cp	r1, r18
     a64:	13 06       	cpc	r1, r19
     a66:	14 06       	cpc	r1, r20
     a68:	55 1f       	adc	r21, r21
     a6a:	f2 cf       	rjmp	.-28     	; 0xa50 <__fp_split3+0xe>
     a6c:	46 95       	lsr	r20
     a6e:	f1 df       	rcall	.-30     	; 0xa52 <__fp_splitA>
     a70:	08 c0       	rjmp	.+16     	; 0xa82 <__fp_splitA+0x30>
     a72:	16 16       	cp	r1, r22
     a74:	17 06       	cpc	r1, r23
     a76:	18 06       	cpc	r1, r24
     a78:	99 1f       	adc	r25, r25
     a7a:	f1 cf       	rjmp	.-30     	; 0xa5e <__fp_splitA+0xc>
     a7c:	86 95       	lsr	r24
     a7e:	71 05       	cpc	r23, r1
     a80:	61 05       	cpc	r22, r1
     a82:	08 94       	sec
     a84:	08 95       	ret

00000a86 <__fp_zero>:
     a86:	e8 94       	clt

00000a88 <__fp_szero>:
     a88:	bb 27       	eor	r27, r27
     a8a:	66 27       	eor	r22, r22
     a8c:	77 27       	eor	r23, r23
     a8e:	cb 01       	movw	r24, r22
     a90:	97 f9       	bld	r25, 7
     a92:	08 95       	ret

00000a94 <__gesf2>:
     a94:	8a df       	rcall	.-236    	; 0x9aa <__fp_cmp>
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__gesf2+0x6>
     a98:	8f ef       	ldi	r24, 0xFF	; 255
     a9a:	08 95       	ret

00000a9c <__mulsf3>:
     a9c:	0b d0       	rcall	.+22     	; 0xab4 <__mulsf3x>
     a9e:	c0 cf       	rjmp	.-128    	; 0xa20 <__fp_round>
     aa0:	b1 df       	rcall	.-158    	; 0xa04 <__fp_pscA>
     aa2:	28 f0       	brcs	.+10     	; 0xaae <__mulsf3+0x12>
     aa4:	b6 df       	rcall	.-148    	; 0xa12 <__fp_pscB>
     aa6:	18 f0       	brcs	.+6      	; 0xaae <__mulsf3+0x12>
     aa8:	95 23       	and	r25, r21
     aaa:	09 f0       	breq	.+2      	; 0xaae <__mulsf3+0x12>
     aac:	a2 cf       	rjmp	.-188    	; 0x9f2 <__fp_inf>
     aae:	a7 cf       	rjmp	.-178    	; 0x9fe <__fp_nan>
     ab0:	11 24       	eor	r1, r1
     ab2:	ea cf       	rjmp	.-44     	; 0xa88 <__fp_szero>

00000ab4 <__mulsf3x>:
     ab4:	c6 df       	rcall	.-116    	; 0xa42 <__fp_split3>
     ab6:	a0 f3       	brcs	.-24     	; 0xaa0 <__mulsf3+0x4>

00000ab8 <__mulsf3_pse>:
     ab8:	95 9f       	mul	r25, r21
     aba:	d1 f3       	breq	.-12     	; 0xab0 <__mulsf3+0x14>
     abc:	95 0f       	add	r25, r21
     abe:	50 e0       	ldi	r21, 0x00	; 0
     ac0:	55 1f       	adc	r21, r21
     ac2:	62 9f       	mul	r22, r18
     ac4:	f0 01       	movw	r30, r0
     ac6:	72 9f       	mul	r23, r18
     ac8:	bb 27       	eor	r27, r27
     aca:	f0 0d       	add	r31, r0
     acc:	b1 1d       	adc	r27, r1
     ace:	63 9f       	mul	r22, r19
     ad0:	aa 27       	eor	r26, r26
     ad2:	f0 0d       	add	r31, r0
     ad4:	b1 1d       	adc	r27, r1
     ad6:	aa 1f       	adc	r26, r26
     ad8:	64 9f       	mul	r22, r20
     ada:	66 27       	eor	r22, r22
     adc:	b0 0d       	add	r27, r0
     ade:	a1 1d       	adc	r26, r1
     ae0:	66 1f       	adc	r22, r22
     ae2:	82 9f       	mul	r24, r18
     ae4:	22 27       	eor	r18, r18
     ae6:	b0 0d       	add	r27, r0
     ae8:	a1 1d       	adc	r26, r1
     aea:	62 1f       	adc	r22, r18
     aec:	73 9f       	mul	r23, r19
     aee:	b0 0d       	add	r27, r0
     af0:	a1 1d       	adc	r26, r1
     af2:	62 1f       	adc	r22, r18
     af4:	83 9f       	mul	r24, r19
     af6:	a0 0d       	add	r26, r0
     af8:	61 1d       	adc	r22, r1
     afa:	22 1f       	adc	r18, r18
     afc:	74 9f       	mul	r23, r20
     afe:	33 27       	eor	r19, r19
     b00:	a0 0d       	add	r26, r0
     b02:	61 1d       	adc	r22, r1
     b04:	23 1f       	adc	r18, r19
     b06:	84 9f       	mul	r24, r20
     b08:	60 0d       	add	r22, r0
     b0a:	21 1d       	adc	r18, r1
     b0c:	82 2f       	mov	r24, r18
     b0e:	76 2f       	mov	r23, r22
     b10:	6a 2f       	mov	r22, r26
     b12:	11 24       	eor	r1, r1
     b14:	9f 57       	subi	r25, 0x7F	; 127
     b16:	50 40       	sbci	r21, 0x00	; 0
     b18:	8a f0       	brmi	.+34     	; 0xb3c <__mulsf3_pse+0x84>
     b1a:	e1 f0       	breq	.+56     	; 0xb54 <__mulsf3_pse+0x9c>
     b1c:	88 23       	and	r24, r24
     b1e:	4a f0       	brmi	.+18     	; 0xb32 <__mulsf3_pse+0x7a>
     b20:	ee 0f       	add	r30, r30
     b22:	ff 1f       	adc	r31, r31
     b24:	bb 1f       	adc	r27, r27
     b26:	66 1f       	adc	r22, r22
     b28:	77 1f       	adc	r23, r23
     b2a:	88 1f       	adc	r24, r24
     b2c:	91 50       	subi	r25, 0x01	; 1
     b2e:	50 40       	sbci	r21, 0x00	; 0
     b30:	a9 f7       	brne	.-22     	; 0xb1c <__mulsf3_pse+0x64>
     b32:	9e 3f       	cpi	r25, 0xFE	; 254
     b34:	51 05       	cpc	r21, r1
     b36:	70 f0       	brcs	.+28     	; 0xb54 <__mulsf3_pse+0x9c>
     b38:	5c cf       	rjmp	.-328    	; 0x9f2 <__fp_inf>
     b3a:	a6 cf       	rjmp	.-180    	; 0xa88 <__fp_szero>
     b3c:	5f 3f       	cpi	r21, 0xFF	; 255
     b3e:	ec f3       	brlt	.-6      	; 0xb3a <__mulsf3_pse+0x82>
     b40:	98 3e       	cpi	r25, 0xE8	; 232
     b42:	dc f3       	brlt	.-10     	; 0xb3a <__mulsf3_pse+0x82>
     b44:	86 95       	lsr	r24
     b46:	77 95       	ror	r23
     b48:	67 95       	ror	r22
     b4a:	b7 95       	ror	r27
     b4c:	f7 95       	ror	r31
     b4e:	e7 95       	ror	r30
     b50:	9f 5f       	subi	r25, 0xFF	; 255
     b52:	c1 f7       	brne	.-16     	; 0xb44 <__mulsf3_pse+0x8c>
     b54:	fe 2b       	or	r31, r30
     b56:	88 0f       	add	r24, r24
     b58:	91 1d       	adc	r25, r1
     b5a:	96 95       	lsr	r25
     b5c:	87 95       	ror	r24
     b5e:	97 f9       	bld	r25, 7
     b60:	08 95       	ret
     b62:	11 f4       	brne	.+4      	; 0xb68 <__mulsf3_pse+0xb0>
     b64:	0e f4       	brtc	.+2      	; 0xb68 <__mulsf3_pse+0xb0>
     b66:	4b cf       	rjmp	.-362    	; 0x9fe <__fp_nan>
     b68:	3e c0       	rjmp	.+124    	; 0xbe6 <__fp_mpack>

00000b6a <sqrt>:
     b6a:	73 df       	rcall	.-282    	; 0xa52 <__fp_splitA>
     b6c:	d0 f3       	brcs	.-12     	; 0xb62 <__mulsf3_pse+0xaa>
     b6e:	99 23       	and	r25, r25
     b70:	d9 f3       	breq	.-10     	; 0xb68 <__mulsf3_pse+0xb0>
     b72:	ce f3       	brts	.-14     	; 0xb66 <__mulsf3_pse+0xae>
     b74:	9f 57       	subi	r25, 0x7F	; 127
     b76:	55 0b       	sbc	r21, r21
     b78:	87 ff       	sbrs	r24, 7
     b7a:	43 d0       	rcall	.+134    	; 0xc02 <__fp_norm2>
     b7c:	00 24       	eor	r0, r0
     b7e:	a0 e6       	ldi	r26, 0x60	; 96
     b80:	40 ea       	ldi	r20, 0xA0	; 160
     b82:	90 01       	movw	r18, r0
     b84:	80 58       	subi	r24, 0x80	; 128
     b86:	56 95       	lsr	r21
     b88:	97 95       	ror	r25
     b8a:	28 f4       	brcc	.+10     	; 0xb96 <sqrt+0x2c>
     b8c:	80 5c       	subi	r24, 0xC0	; 192
     b8e:	66 0f       	add	r22, r22
     b90:	77 1f       	adc	r23, r23
     b92:	88 1f       	adc	r24, r24
     b94:	20 f0       	brcs	.+8      	; 0xb9e <sqrt+0x34>
     b96:	26 17       	cp	r18, r22
     b98:	37 07       	cpc	r19, r23
     b9a:	48 07       	cpc	r20, r24
     b9c:	30 f4       	brcc	.+12     	; 0xbaa <sqrt+0x40>
     b9e:	62 1b       	sub	r22, r18
     ba0:	73 0b       	sbc	r23, r19
     ba2:	84 0b       	sbc	r24, r20
     ba4:	20 29       	or	r18, r0
     ba6:	31 29       	or	r19, r1
     ba8:	4a 2b       	or	r20, r26
     baa:	a6 95       	lsr	r26
     bac:	17 94       	ror	r1
     bae:	07 94       	ror	r0
     bb0:	20 25       	eor	r18, r0
     bb2:	31 25       	eor	r19, r1
     bb4:	4a 27       	eor	r20, r26
     bb6:	58 f7       	brcc	.-42     	; 0xb8e <sqrt+0x24>
     bb8:	66 0f       	add	r22, r22
     bba:	77 1f       	adc	r23, r23
     bbc:	88 1f       	adc	r24, r24
     bbe:	20 f0       	brcs	.+8      	; 0xbc8 <sqrt+0x5e>
     bc0:	26 17       	cp	r18, r22
     bc2:	37 07       	cpc	r19, r23
     bc4:	48 07       	cpc	r20, r24
     bc6:	30 f4       	brcc	.+12     	; 0xbd4 <sqrt+0x6a>
     bc8:	62 0b       	sbc	r22, r18
     bca:	73 0b       	sbc	r23, r19
     bcc:	84 0b       	sbc	r24, r20
     bce:	20 0d       	add	r18, r0
     bd0:	31 1d       	adc	r19, r1
     bd2:	41 1d       	adc	r20, r1
     bd4:	a0 95       	com	r26
     bd6:	81 f7       	brne	.-32     	; 0xbb8 <sqrt+0x4e>
     bd8:	b9 01       	movw	r22, r18
     bda:	84 2f       	mov	r24, r20
     bdc:	91 58       	subi	r25, 0x81	; 129
     bde:	88 0f       	add	r24, r24
     be0:	96 95       	lsr	r25
     be2:	87 95       	ror	r24
     be4:	08 95       	ret

00000be6 <__fp_mpack>:
     be6:	9f 3f       	cpi	r25, 0xFF	; 255
     be8:	31 f0       	breq	.+12     	; 0xbf6 <__fp_mpack_finite+0xc>

00000bea <__fp_mpack_finite>:
     bea:	91 50       	subi	r25, 0x01	; 1
     bec:	20 f4       	brcc	.+8      	; 0xbf6 <__fp_mpack_finite+0xc>
     bee:	87 95       	ror	r24
     bf0:	77 95       	ror	r23
     bf2:	67 95       	ror	r22
     bf4:	b7 95       	ror	r27
     bf6:	88 0f       	add	r24, r24
     bf8:	91 1d       	adc	r25, r1
     bfa:	96 95       	lsr	r25
     bfc:	87 95       	ror	r24
     bfe:	97 f9       	bld	r25, 7
     c00:	08 95       	ret

00000c02 <__fp_norm2>:
     c02:	91 50       	subi	r25, 0x01	; 1
     c04:	50 40       	sbci	r21, 0x00	; 0
     c06:	66 0f       	add	r22, r22
     c08:	77 1f       	adc	r23, r23
     c0a:	88 1f       	adc	r24, r24
     c0c:	d2 f7       	brpl	.-12     	; 0xc02 <__fp_norm2>
     c0e:	08 95       	ret

00000c10 <dtostrf>:
     c10:	ef 92       	push	r14
     c12:	0f 93       	push	r16
     c14:	1f 93       	push	r17
     c16:	cf 93       	push	r28
     c18:	df 93       	push	r29
     c1a:	e8 01       	movw	r28, r16
     c1c:	47 fd       	sbrc	r20, 7
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <dtostrf+0x14>
     c20:	34 e0       	ldi	r19, 0x04	; 4
     c22:	01 c0       	rjmp	.+2      	; 0xc26 <dtostrf+0x16>
     c24:	34 e1       	ldi	r19, 0x14	; 20
     c26:	04 2e       	mov	r0, r20
     c28:	00 0c       	add	r0, r0
     c2a:	55 0b       	sbc	r21, r21
     c2c:	57 ff       	sbrs	r21, 7
     c2e:	03 c0       	rjmp	.+6      	; 0xc36 <dtostrf+0x26>
     c30:	51 95       	neg	r21
     c32:	41 95       	neg	r20
     c34:	51 09       	sbc	r21, r1
     c36:	e3 2e       	mov	r14, r19
     c38:	02 2f       	mov	r16, r18
     c3a:	24 2f       	mov	r18, r20
     c3c:	ae 01       	movw	r20, r28
     c3e:	07 d0       	rcall	.+14     	; 0xc4e <dtoa_prf>
     c40:	ce 01       	movw	r24, r28
     c42:	df 91       	pop	r29
     c44:	cf 91       	pop	r28
     c46:	1f 91       	pop	r17
     c48:	0f 91       	pop	r16
     c4a:	ef 90       	pop	r14
     c4c:	08 95       	ret

00000c4e <dtoa_prf>:
     c4e:	8f 92       	push	r8
     c50:	9f 92       	push	r9
     c52:	af 92       	push	r10
     c54:	bf 92       	push	r11
     c56:	cf 92       	push	r12
     c58:	df 92       	push	r13
     c5a:	ef 92       	push	r14
     c5c:	ff 92       	push	r15
     c5e:	0f 93       	push	r16
     c60:	1f 93       	push	r17
     c62:	cf 93       	push	r28
     c64:	df 93       	push	r29
     c66:	cd b7       	in	r28, 0x3d	; 61
     c68:	de b7       	in	r29, 0x3e	; 62
     c6a:	29 97       	sbiw	r28, 0x09	; 9
     c6c:	0f b6       	in	r0, 0x3f	; 63
     c6e:	f8 94       	cli
     c70:	de bf       	out	0x3e, r29	; 62
     c72:	0f be       	out	0x3f, r0	; 63
     c74:	cd bf       	out	0x3d, r28	; 61
     c76:	6a 01       	movw	r12, r20
     c78:	12 2f       	mov	r17, r18
     c7a:	b0 2e       	mov	r11, r16
     c7c:	2b e3       	ldi	r18, 0x3B	; 59
     c7e:	20 17       	cp	r18, r16
     c80:	20 f0       	brcs	.+8      	; 0xc8a <dtoa_prf+0x3c>
     c82:	ff 24       	eor	r15, r15
     c84:	f3 94       	inc	r15
     c86:	f0 0e       	add	r15, r16
     c88:	02 c0       	rjmp	.+4      	; 0xc8e <dtoa_prf+0x40>
     c8a:	2c e3       	ldi	r18, 0x3C	; 60
     c8c:	f2 2e       	mov	r15, r18
     c8e:	0f 2d       	mov	r16, r15
     c90:	27 e0       	ldi	r18, 0x07	; 7
     c92:	ae 01       	movw	r20, r28
     c94:	4f 5f       	subi	r20, 0xFF	; 255
     c96:	5f 4f       	sbci	r21, 0xFF	; 255
     c98:	50 d1       	rcall	.+672    	; 0xf3a <__ftoa_engine>
     c9a:	bc 01       	movw	r22, r24
     c9c:	49 81       	ldd	r20, Y+1	; 0x01
     c9e:	84 2f       	mov	r24, r20
     ca0:	89 70       	andi	r24, 0x09	; 9
     ca2:	81 30       	cpi	r24, 0x01	; 1
     ca4:	31 f0       	breq	.+12     	; 0xcb2 <dtoa_prf+0x64>
     ca6:	e1 fc       	sbrc	r14, 1
     ca8:	06 c0       	rjmp	.+12     	; 0xcb6 <dtoa_prf+0x68>
     caa:	e0 fe       	sbrs	r14, 0
     cac:	06 c0       	rjmp	.+12     	; 0xcba <dtoa_prf+0x6c>
     cae:	90 e2       	ldi	r25, 0x20	; 32
     cb0:	05 c0       	rjmp	.+10     	; 0xcbc <dtoa_prf+0x6e>
     cb2:	9d e2       	ldi	r25, 0x2D	; 45
     cb4:	03 c0       	rjmp	.+6      	; 0xcbc <dtoa_prf+0x6e>
     cb6:	9b e2       	ldi	r25, 0x2B	; 43
     cb8:	01 c0       	rjmp	.+2      	; 0xcbc <dtoa_prf+0x6e>
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	5e 2d       	mov	r21, r14
     cbe:	50 71       	andi	r21, 0x10	; 16
     cc0:	43 ff       	sbrs	r20, 3
     cc2:	3c c0       	rjmp	.+120    	; 0xd3c <dtoa_prf+0xee>
     cc4:	91 11       	cpse	r25, r1
     cc6:	02 c0       	rjmp	.+4      	; 0xccc <dtoa_prf+0x7e>
     cc8:	83 e0       	ldi	r24, 0x03	; 3
     cca:	01 c0       	rjmp	.+2      	; 0xcce <dtoa_prf+0x80>
     ccc:	84 e0       	ldi	r24, 0x04	; 4
     cce:	81 17       	cp	r24, r17
     cd0:	18 f4       	brcc	.+6      	; 0xcd8 <dtoa_prf+0x8a>
     cd2:	21 2f       	mov	r18, r17
     cd4:	28 1b       	sub	r18, r24
     cd6:	01 c0       	rjmp	.+2      	; 0xcda <dtoa_prf+0x8c>
     cd8:	20 e0       	ldi	r18, 0x00	; 0
     cda:	51 11       	cpse	r21, r1
     cdc:	0b c0       	rjmp	.+22     	; 0xcf4 <dtoa_prf+0xa6>
     cde:	f6 01       	movw	r30, r12
     ce0:	82 2f       	mov	r24, r18
     ce2:	30 e2       	ldi	r19, 0x20	; 32
     ce4:	88 23       	and	r24, r24
     ce6:	19 f0       	breq	.+6      	; 0xcee <dtoa_prf+0xa0>
     ce8:	31 93       	st	Z+, r19
     cea:	81 50       	subi	r24, 0x01	; 1
     cec:	fb cf       	rjmp	.-10     	; 0xce4 <dtoa_prf+0x96>
     cee:	c2 0e       	add	r12, r18
     cf0:	d1 1c       	adc	r13, r1
     cf2:	20 e0       	ldi	r18, 0x00	; 0
     cf4:	99 23       	and	r25, r25
     cf6:	29 f0       	breq	.+10     	; 0xd02 <dtoa_prf+0xb4>
     cf8:	d6 01       	movw	r26, r12
     cfa:	9c 93       	st	X, r25
     cfc:	f6 01       	movw	r30, r12
     cfe:	31 96       	adiw	r30, 0x01	; 1
     d00:	6f 01       	movw	r12, r30
     d02:	c6 01       	movw	r24, r12
     d04:	03 96       	adiw	r24, 0x03	; 3
     d06:	e2 fe       	sbrs	r14, 2
     d08:	0a c0       	rjmp	.+20     	; 0xd1e <dtoa_prf+0xd0>
     d0a:	3e e4       	ldi	r19, 0x4E	; 78
     d0c:	d6 01       	movw	r26, r12
     d0e:	3c 93       	st	X, r19
     d10:	41 e4       	ldi	r20, 0x41	; 65
     d12:	11 96       	adiw	r26, 0x01	; 1
     d14:	4c 93       	st	X, r20
     d16:	11 97       	sbiw	r26, 0x01	; 1
     d18:	12 96       	adiw	r26, 0x02	; 2
     d1a:	3c 93       	st	X, r19
     d1c:	06 c0       	rjmp	.+12     	; 0xd2a <dtoa_prf+0xdc>
     d1e:	3e e6       	ldi	r19, 0x6E	; 110
     d20:	f6 01       	movw	r30, r12
     d22:	30 83       	st	Z, r19
     d24:	41 e6       	ldi	r20, 0x61	; 97
     d26:	41 83       	std	Z+1, r20	; 0x01
     d28:	32 83       	std	Z+2, r19	; 0x02
     d2a:	fc 01       	movw	r30, r24
     d2c:	32 2f       	mov	r19, r18
     d2e:	40 e2       	ldi	r20, 0x20	; 32
     d30:	33 23       	and	r19, r19
     d32:	09 f4       	brne	.+2      	; 0xd36 <dtoa_prf+0xe8>
     d34:	42 c0       	rjmp	.+132    	; 0xdba <dtoa_prf+0x16c>
     d36:	41 93       	st	Z+, r20
     d38:	31 50       	subi	r19, 0x01	; 1
     d3a:	fa cf       	rjmp	.-12     	; 0xd30 <dtoa_prf+0xe2>
     d3c:	42 ff       	sbrs	r20, 2
     d3e:	44 c0       	rjmp	.+136    	; 0xdc8 <dtoa_prf+0x17a>
     d40:	91 11       	cpse	r25, r1
     d42:	02 c0       	rjmp	.+4      	; 0xd48 <dtoa_prf+0xfa>
     d44:	83 e0       	ldi	r24, 0x03	; 3
     d46:	01 c0       	rjmp	.+2      	; 0xd4a <dtoa_prf+0xfc>
     d48:	84 e0       	ldi	r24, 0x04	; 4
     d4a:	81 17       	cp	r24, r17
     d4c:	18 f4       	brcc	.+6      	; 0xd54 <dtoa_prf+0x106>
     d4e:	21 2f       	mov	r18, r17
     d50:	28 1b       	sub	r18, r24
     d52:	01 c0       	rjmp	.+2      	; 0xd56 <dtoa_prf+0x108>
     d54:	20 e0       	ldi	r18, 0x00	; 0
     d56:	51 11       	cpse	r21, r1
     d58:	0b c0       	rjmp	.+22     	; 0xd70 <dtoa_prf+0x122>
     d5a:	f6 01       	movw	r30, r12
     d5c:	82 2f       	mov	r24, r18
     d5e:	30 e2       	ldi	r19, 0x20	; 32
     d60:	88 23       	and	r24, r24
     d62:	19 f0       	breq	.+6      	; 0xd6a <dtoa_prf+0x11c>
     d64:	31 93       	st	Z+, r19
     d66:	81 50       	subi	r24, 0x01	; 1
     d68:	fb cf       	rjmp	.-10     	; 0xd60 <dtoa_prf+0x112>
     d6a:	c2 0e       	add	r12, r18
     d6c:	d1 1c       	adc	r13, r1
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	99 23       	and	r25, r25
     d72:	29 f0       	breq	.+10     	; 0xd7e <dtoa_prf+0x130>
     d74:	d6 01       	movw	r26, r12
     d76:	9c 93       	st	X, r25
     d78:	f6 01       	movw	r30, r12
     d7a:	31 96       	adiw	r30, 0x01	; 1
     d7c:	6f 01       	movw	r12, r30
     d7e:	c6 01       	movw	r24, r12
     d80:	03 96       	adiw	r24, 0x03	; 3
     d82:	e2 fe       	sbrs	r14, 2
     d84:	0b c0       	rjmp	.+22     	; 0xd9c <dtoa_prf+0x14e>
     d86:	39 e4       	ldi	r19, 0x49	; 73
     d88:	d6 01       	movw	r26, r12
     d8a:	3c 93       	st	X, r19
     d8c:	3e e4       	ldi	r19, 0x4E	; 78
     d8e:	11 96       	adiw	r26, 0x01	; 1
     d90:	3c 93       	st	X, r19
     d92:	11 97       	sbiw	r26, 0x01	; 1
     d94:	36 e4       	ldi	r19, 0x46	; 70
     d96:	12 96       	adiw	r26, 0x02	; 2
     d98:	3c 93       	st	X, r19
     d9a:	07 c0       	rjmp	.+14     	; 0xdaa <dtoa_prf+0x15c>
     d9c:	39 e6       	ldi	r19, 0x69	; 105
     d9e:	f6 01       	movw	r30, r12
     da0:	30 83       	st	Z, r19
     da2:	3e e6       	ldi	r19, 0x6E	; 110
     da4:	31 83       	std	Z+1, r19	; 0x01
     da6:	36 e6       	ldi	r19, 0x66	; 102
     da8:	32 83       	std	Z+2, r19	; 0x02
     daa:	fc 01       	movw	r30, r24
     dac:	32 2f       	mov	r19, r18
     dae:	40 e2       	ldi	r20, 0x20	; 32
     db0:	33 23       	and	r19, r19
     db2:	19 f0       	breq	.+6      	; 0xdba <dtoa_prf+0x16c>
     db4:	41 93       	st	Z+, r20
     db6:	31 50       	subi	r19, 0x01	; 1
     db8:	fb cf       	rjmp	.-10     	; 0xdb0 <dtoa_prf+0x162>
     dba:	fc 01       	movw	r30, r24
     dbc:	e2 0f       	add	r30, r18
     dbe:	f1 1d       	adc	r31, r1
     dc0:	10 82       	st	Z, r1
     dc2:	8e ef       	ldi	r24, 0xFE	; 254
     dc4:	9f ef       	ldi	r25, 0xFF	; 255
     dc6:	a6 c0       	rjmp	.+332    	; 0xf14 <dtoa_prf+0x2c6>
     dc8:	21 e0       	ldi	r18, 0x01	; 1
     dca:	30 e0       	ldi	r19, 0x00	; 0
     dcc:	91 11       	cpse	r25, r1
     dce:	02 c0       	rjmp	.+4      	; 0xdd4 <dtoa_prf+0x186>
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	16 16       	cp	r1, r22
     dd6:	17 06       	cpc	r1, r23
     dd8:	1c f4       	brge	.+6      	; 0xde0 <dtoa_prf+0x192>
     dda:	fb 01       	movw	r30, r22
     ddc:	31 96       	adiw	r30, 0x01	; 1
     dde:	02 c0       	rjmp	.+4      	; 0xde4 <dtoa_prf+0x196>
     de0:	e1 e0       	ldi	r30, 0x01	; 1
     de2:	f0 e0       	ldi	r31, 0x00	; 0
     de4:	2e 0f       	add	r18, r30
     de6:	3f 1f       	adc	r19, r31
     de8:	bb 20       	and	r11, r11
     dea:	21 f0       	breq	.+8      	; 0xdf4 <dtoa_prf+0x1a6>
     dec:	eb 2d       	mov	r30, r11
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	31 96       	adiw	r30, 0x01	; 1
     df2:	02 c0       	rjmp	.+4      	; 0xdf8 <dtoa_prf+0x1aa>
     df4:	e0 e0       	ldi	r30, 0x00	; 0
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	2e 0f       	add	r18, r30
     dfa:	3f 1f       	adc	r19, r31
     dfc:	e1 2f       	mov	r30, r17
     dfe:	f0 e0       	ldi	r31, 0x00	; 0
     e00:	2e 17       	cp	r18, r30
     e02:	3f 07       	cpc	r19, r31
     e04:	1c f4       	brge	.+6      	; 0xe0c <dtoa_prf+0x1be>
     e06:	12 1b       	sub	r17, r18
     e08:	21 2f       	mov	r18, r17
     e0a:	01 c0       	rjmp	.+2      	; 0xe0e <dtoa_prf+0x1c0>
     e0c:	20 e0       	ldi	r18, 0x00	; 0
     e0e:	8e 2d       	mov	r24, r14
     e10:	88 71       	andi	r24, 0x18	; 24
     e12:	59 f4       	brne	.+22     	; 0xe2a <dtoa_prf+0x1dc>
     e14:	f6 01       	movw	r30, r12
     e16:	82 2f       	mov	r24, r18
     e18:	30 e2       	ldi	r19, 0x20	; 32
     e1a:	88 23       	and	r24, r24
     e1c:	19 f0       	breq	.+6      	; 0xe24 <dtoa_prf+0x1d6>
     e1e:	31 93       	st	Z+, r19
     e20:	81 50       	subi	r24, 0x01	; 1
     e22:	fb cf       	rjmp	.-10     	; 0xe1a <dtoa_prf+0x1cc>
     e24:	c2 0e       	add	r12, r18
     e26:	d1 1c       	adc	r13, r1
     e28:	20 e0       	ldi	r18, 0x00	; 0
     e2a:	99 23       	and	r25, r25
     e2c:	29 f0       	breq	.+10     	; 0xe38 <dtoa_prf+0x1ea>
     e2e:	d6 01       	movw	r26, r12
     e30:	9c 93       	st	X, r25
     e32:	f6 01       	movw	r30, r12
     e34:	31 96       	adiw	r30, 0x01	; 1
     e36:	6f 01       	movw	r12, r30
     e38:	51 11       	cpse	r21, r1
     e3a:	0b c0       	rjmp	.+22     	; 0xe52 <dtoa_prf+0x204>
     e3c:	f6 01       	movw	r30, r12
     e3e:	82 2f       	mov	r24, r18
     e40:	90 e3       	ldi	r25, 0x30	; 48
     e42:	88 23       	and	r24, r24
     e44:	19 f0       	breq	.+6      	; 0xe4c <dtoa_prf+0x1fe>
     e46:	91 93       	st	Z+, r25
     e48:	81 50       	subi	r24, 0x01	; 1
     e4a:	fb cf       	rjmp	.-10     	; 0xe42 <dtoa_prf+0x1f4>
     e4c:	c2 0e       	add	r12, r18
     e4e:	d1 1c       	adc	r13, r1
     e50:	20 e0       	ldi	r18, 0x00	; 0
     e52:	0f 2d       	mov	r16, r15
     e54:	06 0f       	add	r16, r22
     e56:	9a 81       	ldd	r25, Y+2	; 0x02
     e58:	34 2f       	mov	r19, r20
     e5a:	30 71       	andi	r19, 0x10	; 16
     e5c:	44 ff       	sbrs	r20, 4
     e5e:	03 c0       	rjmp	.+6      	; 0xe66 <dtoa_prf+0x218>
     e60:	91 33       	cpi	r25, 0x31	; 49
     e62:	09 f4       	brne	.+2      	; 0xe66 <dtoa_prf+0x218>
     e64:	01 50       	subi	r16, 0x01	; 1
     e66:	10 16       	cp	r1, r16
     e68:	24 f4       	brge	.+8      	; 0xe72 <dtoa_prf+0x224>
     e6a:	09 30       	cpi	r16, 0x09	; 9
     e6c:	18 f0       	brcs	.+6      	; 0xe74 <dtoa_prf+0x226>
     e6e:	08 e0       	ldi	r16, 0x08	; 8
     e70:	01 c0       	rjmp	.+2      	; 0xe74 <dtoa_prf+0x226>
     e72:	01 e0       	ldi	r16, 0x01	; 1
     e74:	ab 01       	movw	r20, r22
     e76:	77 ff       	sbrs	r23, 7
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <dtoa_prf+0x230>
     e7a:	40 e0       	ldi	r20, 0x00	; 0
     e7c:	50 e0       	ldi	r21, 0x00	; 0
     e7e:	fb 01       	movw	r30, r22
     e80:	e4 1b       	sub	r30, r20
     e82:	f5 0b       	sbc	r31, r21
     e84:	a1 e0       	ldi	r26, 0x01	; 1
     e86:	b0 e0       	ldi	r27, 0x00	; 0
     e88:	ac 0f       	add	r26, r28
     e8a:	bd 1f       	adc	r27, r29
     e8c:	ea 0f       	add	r30, r26
     e8e:	fb 1f       	adc	r31, r27
     e90:	8e e2       	ldi	r24, 0x2E	; 46
     e92:	a8 2e       	mov	r10, r24
     e94:	4b 01       	movw	r8, r22
     e96:	80 1a       	sub	r8, r16
     e98:	91 08       	sbc	r9, r1
     e9a:	0b 2d       	mov	r16, r11
     e9c:	10 e0       	ldi	r17, 0x00	; 0
     e9e:	11 95       	neg	r17
     ea0:	01 95       	neg	r16
     ea2:	11 09       	sbc	r17, r1
     ea4:	4f 3f       	cpi	r20, 0xFF	; 255
     ea6:	bf ef       	ldi	r27, 0xFF	; 255
     ea8:	5b 07       	cpc	r21, r27
     eaa:	21 f4       	brne	.+8      	; 0xeb4 <dtoa_prf+0x266>
     eac:	d6 01       	movw	r26, r12
     eae:	ac 92       	st	X, r10
     eb0:	11 96       	adiw	r26, 0x01	; 1
     eb2:	6d 01       	movw	r12, r26
     eb4:	64 17       	cp	r22, r20
     eb6:	75 07       	cpc	r23, r21
     eb8:	2c f0       	brlt	.+10     	; 0xec4 <dtoa_prf+0x276>
     eba:	84 16       	cp	r8, r20
     ebc:	95 06       	cpc	r9, r21
     ebe:	14 f4       	brge	.+4      	; 0xec4 <dtoa_prf+0x276>
     ec0:	81 81       	ldd	r24, Z+1	; 0x01
     ec2:	01 c0       	rjmp	.+2      	; 0xec6 <dtoa_prf+0x278>
     ec4:	80 e3       	ldi	r24, 0x30	; 48
     ec6:	41 50       	subi	r20, 0x01	; 1
     ec8:	51 09       	sbc	r21, r1
     eca:	31 96       	adiw	r30, 0x01	; 1
     ecc:	d6 01       	movw	r26, r12
     ece:	11 96       	adiw	r26, 0x01	; 1
     ed0:	7d 01       	movw	r14, r26
     ed2:	40 17       	cp	r20, r16
     ed4:	51 07       	cpc	r21, r17
     ed6:	24 f0       	brlt	.+8      	; 0xee0 <dtoa_prf+0x292>
     ed8:	d6 01       	movw	r26, r12
     eda:	8c 93       	st	X, r24
     edc:	67 01       	movw	r12, r14
     ede:	e2 cf       	rjmp	.-60     	; 0xea4 <dtoa_prf+0x256>
     ee0:	64 17       	cp	r22, r20
     ee2:	75 07       	cpc	r23, r21
     ee4:	39 f4       	brne	.+14     	; 0xef4 <dtoa_prf+0x2a6>
     ee6:	96 33       	cpi	r25, 0x36	; 54
     ee8:	20 f4       	brcc	.+8      	; 0xef2 <dtoa_prf+0x2a4>
     eea:	95 33       	cpi	r25, 0x35	; 53
     eec:	19 f4       	brne	.+6      	; 0xef4 <dtoa_prf+0x2a6>
     eee:	31 11       	cpse	r19, r1
     ef0:	01 c0       	rjmp	.+2      	; 0xef4 <dtoa_prf+0x2a6>
     ef2:	81 e3       	ldi	r24, 0x31	; 49
     ef4:	f6 01       	movw	r30, r12
     ef6:	80 83       	st	Z, r24
     ef8:	f7 01       	movw	r30, r14
     efa:	82 2f       	mov	r24, r18
     efc:	90 e2       	ldi	r25, 0x20	; 32
     efe:	88 23       	and	r24, r24
     f00:	19 f0       	breq	.+6      	; 0xf08 <dtoa_prf+0x2ba>
     f02:	91 93       	st	Z+, r25
     f04:	81 50       	subi	r24, 0x01	; 1
     f06:	fb cf       	rjmp	.-10     	; 0xefe <dtoa_prf+0x2b0>
     f08:	f7 01       	movw	r30, r14
     f0a:	e2 0f       	add	r30, r18
     f0c:	f1 1d       	adc	r31, r1
     f0e:	10 82       	st	Z, r1
     f10:	80 e0       	ldi	r24, 0x00	; 0
     f12:	90 e0       	ldi	r25, 0x00	; 0
     f14:	29 96       	adiw	r28, 0x09	; 9
     f16:	0f b6       	in	r0, 0x3f	; 63
     f18:	f8 94       	cli
     f1a:	de bf       	out	0x3e, r29	; 62
     f1c:	0f be       	out	0x3f, r0	; 63
     f1e:	cd bf       	out	0x3d, r28	; 61
     f20:	df 91       	pop	r29
     f22:	cf 91       	pop	r28
     f24:	1f 91       	pop	r17
     f26:	0f 91       	pop	r16
     f28:	ff 90       	pop	r15
     f2a:	ef 90       	pop	r14
     f2c:	df 90       	pop	r13
     f2e:	cf 90       	pop	r12
     f30:	bf 90       	pop	r11
     f32:	af 90       	pop	r10
     f34:	9f 90       	pop	r9
     f36:	8f 90       	pop	r8
     f38:	08 95       	ret

00000f3a <__ftoa_engine>:
     f3a:	28 30       	cpi	r18, 0x08	; 8
     f3c:	08 f0       	brcs	.+2      	; 0xf40 <__ftoa_engine+0x6>
     f3e:	27 e0       	ldi	r18, 0x07	; 7
     f40:	33 27       	eor	r19, r19
     f42:	da 01       	movw	r26, r20
     f44:	99 0f       	add	r25, r25
     f46:	31 1d       	adc	r19, r1
     f48:	87 fd       	sbrc	r24, 7
     f4a:	91 60       	ori	r25, 0x01	; 1
     f4c:	00 96       	adiw	r24, 0x00	; 0
     f4e:	61 05       	cpc	r22, r1
     f50:	71 05       	cpc	r23, r1
     f52:	39 f4       	brne	.+14     	; 0xf62 <__ftoa_engine+0x28>
     f54:	32 60       	ori	r19, 0x02	; 2
     f56:	2e 5f       	subi	r18, 0xFE	; 254
     f58:	3d 93       	st	X+, r19
     f5a:	30 e3       	ldi	r19, 0x30	; 48
     f5c:	2a 95       	dec	r18
     f5e:	e1 f7       	brne	.-8      	; 0xf58 <__ftoa_engine+0x1e>
     f60:	08 95       	ret
     f62:	9f 3f       	cpi	r25, 0xFF	; 255
     f64:	30 f0       	brcs	.+12     	; 0xf72 <__ftoa_engine+0x38>
     f66:	80 38       	cpi	r24, 0x80	; 128
     f68:	71 05       	cpc	r23, r1
     f6a:	61 05       	cpc	r22, r1
     f6c:	09 f0       	breq	.+2      	; 0xf70 <__ftoa_engine+0x36>
     f6e:	3c 5f       	subi	r19, 0xFC	; 252
     f70:	3c 5f       	subi	r19, 0xFC	; 252
     f72:	3d 93       	st	X+, r19
     f74:	91 30       	cpi	r25, 0x01	; 1
     f76:	08 f0       	brcs	.+2      	; 0xf7a <__ftoa_engine+0x40>
     f78:	80 68       	ori	r24, 0x80	; 128
     f7a:	91 1d       	adc	r25, r1
     f7c:	df 93       	push	r29
     f7e:	cf 93       	push	r28
     f80:	1f 93       	push	r17
     f82:	0f 93       	push	r16
     f84:	ff 92       	push	r15
     f86:	ef 92       	push	r14
     f88:	19 2f       	mov	r17, r25
     f8a:	98 7f       	andi	r25, 0xF8	; 248
     f8c:	96 95       	lsr	r25
     f8e:	e9 2f       	mov	r30, r25
     f90:	96 95       	lsr	r25
     f92:	96 95       	lsr	r25
     f94:	e9 0f       	add	r30, r25
     f96:	ff 27       	eor	r31, r31
     f98:	e2 5c       	subi	r30, 0xC2	; 194
     f9a:	fe 4f       	sbci	r31, 0xFE	; 254
     f9c:	99 27       	eor	r25, r25
     f9e:	33 27       	eor	r19, r19
     fa0:	ee 24       	eor	r14, r14
     fa2:	ff 24       	eor	r15, r15
     fa4:	a7 01       	movw	r20, r14
     fa6:	e7 01       	movw	r28, r14
     fa8:	05 90       	lpm	r0, Z+
     faa:	08 94       	sec
     fac:	07 94       	ror	r0
     fae:	28 f4       	brcc	.+10     	; 0xfba <__ftoa_engine+0x80>
     fb0:	36 0f       	add	r19, r22
     fb2:	e7 1e       	adc	r14, r23
     fb4:	f8 1e       	adc	r15, r24
     fb6:	49 1f       	adc	r20, r25
     fb8:	51 1d       	adc	r21, r1
     fba:	66 0f       	add	r22, r22
     fbc:	77 1f       	adc	r23, r23
     fbe:	88 1f       	adc	r24, r24
     fc0:	99 1f       	adc	r25, r25
     fc2:	06 94       	lsr	r0
     fc4:	a1 f7       	brne	.-24     	; 0xfae <__ftoa_engine+0x74>
     fc6:	05 90       	lpm	r0, Z+
     fc8:	07 94       	ror	r0
     fca:	28 f4       	brcc	.+10     	; 0xfd6 <__ftoa_engine+0x9c>
     fcc:	e7 0e       	add	r14, r23
     fce:	f8 1e       	adc	r15, r24
     fd0:	49 1f       	adc	r20, r25
     fd2:	56 1f       	adc	r21, r22
     fd4:	c1 1d       	adc	r28, r1
     fd6:	77 0f       	add	r23, r23
     fd8:	88 1f       	adc	r24, r24
     fda:	99 1f       	adc	r25, r25
     fdc:	66 1f       	adc	r22, r22
     fde:	06 94       	lsr	r0
     fe0:	a1 f7       	brne	.-24     	; 0xfca <__ftoa_engine+0x90>
     fe2:	05 90       	lpm	r0, Z+
     fe4:	07 94       	ror	r0
     fe6:	28 f4       	brcc	.+10     	; 0xff2 <__ftoa_engine+0xb8>
     fe8:	f8 0e       	add	r15, r24
     fea:	49 1f       	adc	r20, r25
     fec:	56 1f       	adc	r21, r22
     fee:	c7 1f       	adc	r28, r23
     ff0:	d1 1d       	adc	r29, r1
     ff2:	88 0f       	add	r24, r24
     ff4:	99 1f       	adc	r25, r25
     ff6:	66 1f       	adc	r22, r22
     ff8:	77 1f       	adc	r23, r23
     ffa:	06 94       	lsr	r0
     ffc:	a1 f7       	brne	.-24     	; 0xfe6 <__ftoa_engine+0xac>
     ffe:	05 90       	lpm	r0, Z+
    1000:	07 94       	ror	r0
    1002:	20 f4       	brcc	.+8      	; 0x100c <__ftoa_engine+0xd2>
    1004:	49 0f       	add	r20, r25
    1006:	56 1f       	adc	r21, r22
    1008:	c7 1f       	adc	r28, r23
    100a:	d8 1f       	adc	r29, r24
    100c:	99 0f       	add	r25, r25
    100e:	66 1f       	adc	r22, r22
    1010:	77 1f       	adc	r23, r23
    1012:	88 1f       	adc	r24, r24
    1014:	06 94       	lsr	r0
    1016:	a9 f7       	brne	.-22     	; 0x1002 <__ftoa_engine+0xc8>
    1018:	84 91       	lpm	r24, Z
    101a:	10 95       	com	r17
    101c:	17 70       	andi	r17, 0x07	; 7
    101e:	41 f0       	breq	.+16     	; 0x1030 <__ftoa_engine+0xf6>
    1020:	d6 95       	lsr	r29
    1022:	c7 95       	ror	r28
    1024:	57 95       	ror	r21
    1026:	47 95       	ror	r20
    1028:	f7 94       	ror	r15
    102a:	e7 94       	ror	r14
    102c:	1a 95       	dec	r17
    102e:	c1 f7       	brne	.-16     	; 0x1020 <__ftoa_engine+0xe6>
    1030:	e4 ee       	ldi	r30, 0xE4	; 228
    1032:	f0 e0       	ldi	r31, 0x00	; 0
    1034:	68 94       	set
    1036:	15 90       	lpm	r1, Z+
    1038:	15 91       	lpm	r17, Z+
    103a:	35 91       	lpm	r19, Z+
    103c:	65 91       	lpm	r22, Z+
    103e:	95 91       	lpm	r25, Z+
    1040:	05 90       	lpm	r0, Z+
    1042:	7f e2       	ldi	r23, 0x2F	; 47
    1044:	73 95       	inc	r23
    1046:	e1 18       	sub	r14, r1
    1048:	f1 0a       	sbc	r15, r17
    104a:	43 0b       	sbc	r20, r19
    104c:	56 0b       	sbc	r21, r22
    104e:	c9 0b       	sbc	r28, r25
    1050:	d0 09       	sbc	r29, r0
    1052:	c0 f7       	brcc	.-16     	; 0x1044 <__ftoa_engine+0x10a>
    1054:	e1 0c       	add	r14, r1
    1056:	f1 1e       	adc	r15, r17
    1058:	43 1f       	adc	r20, r19
    105a:	56 1f       	adc	r21, r22
    105c:	c9 1f       	adc	r28, r25
    105e:	d0 1d       	adc	r29, r0
    1060:	7e f4       	brtc	.+30     	; 0x1080 <__ftoa_engine+0x146>
    1062:	70 33       	cpi	r23, 0x30	; 48
    1064:	11 f4       	brne	.+4      	; 0x106a <__ftoa_engine+0x130>
    1066:	8a 95       	dec	r24
    1068:	e6 cf       	rjmp	.-52     	; 0x1036 <__ftoa_engine+0xfc>
    106a:	e8 94       	clt
    106c:	01 50       	subi	r16, 0x01	; 1
    106e:	30 f0       	brcs	.+12     	; 0x107c <__ftoa_engine+0x142>
    1070:	08 0f       	add	r16, r24
    1072:	0a f4       	brpl	.+2      	; 0x1076 <__ftoa_engine+0x13c>
    1074:	00 27       	eor	r16, r16
    1076:	02 17       	cp	r16, r18
    1078:	08 f4       	brcc	.+2      	; 0x107c <__ftoa_engine+0x142>
    107a:	20 2f       	mov	r18, r16
    107c:	23 95       	inc	r18
    107e:	02 2f       	mov	r16, r18
    1080:	7a 33       	cpi	r23, 0x3A	; 58
    1082:	28 f0       	brcs	.+10     	; 0x108e <__ftoa_engine+0x154>
    1084:	79 e3       	ldi	r23, 0x39	; 57
    1086:	7d 93       	st	X+, r23
    1088:	2a 95       	dec	r18
    108a:	e9 f7       	brne	.-6      	; 0x1086 <__ftoa_engine+0x14c>
    108c:	10 c0       	rjmp	.+32     	; 0x10ae <__ftoa_engine+0x174>
    108e:	7d 93       	st	X+, r23
    1090:	2a 95       	dec	r18
    1092:	89 f6       	brne	.-94     	; 0x1036 <__ftoa_engine+0xfc>
    1094:	06 94       	lsr	r0
    1096:	97 95       	ror	r25
    1098:	67 95       	ror	r22
    109a:	37 95       	ror	r19
    109c:	17 95       	ror	r17
    109e:	17 94       	ror	r1
    10a0:	e1 18       	sub	r14, r1
    10a2:	f1 0a       	sbc	r15, r17
    10a4:	43 0b       	sbc	r20, r19
    10a6:	56 0b       	sbc	r21, r22
    10a8:	c9 0b       	sbc	r28, r25
    10aa:	d0 09       	sbc	r29, r0
    10ac:	98 f0       	brcs	.+38     	; 0x10d4 <__ftoa_engine+0x19a>
    10ae:	23 95       	inc	r18
    10b0:	7e 91       	ld	r23, -X
    10b2:	73 95       	inc	r23
    10b4:	7a 33       	cpi	r23, 0x3A	; 58
    10b6:	08 f0       	brcs	.+2      	; 0x10ba <__ftoa_engine+0x180>
    10b8:	70 e3       	ldi	r23, 0x30	; 48
    10ba:	7c 93       	st	X, r23
    10bc:	20 13       	cpse	r18, r16
    10be:	b8 f7       	brcc	.-18     	; 0x10ae <__ftoa_engine+0x174>
    10c0:	7e 91       	ld	r23, -X
    10c2:	70 61       	ori	r23, 0x10	; 16
    10c4:	7d 93       	st	X+, r23
    10c6:	30 f0       	brcs	.+12     	; 0x10d4 <__ftoa_engine+0x19a>
    10c8:	83 95       	inc	r24
    10ca:	71 e3       	ldi	r23, 0x31	; 49
    10cc:	7d 93       	st	X+, r23
    10ce:	70 e3       	ldi	r23, 0x30	; 48
    10d0:	2a 95       	dec	r18
    10d2:	e1 f7       	brne	.-8      	; 0x10cc <__ftoa_engine+0x192>
    10d4:	11 24       	eor	r1, r1
    10d6:	ef 90       	pop	r14
    10d8:	ff 90       	pop	r15
    10da:	0f 91       	pop	r16
    10dc:	1f 91       	pop	r17
    10de:	cf 91       	pop	r28
    10e0:	df 91       	pop	r29
    10e2:	99 27       	eor	r25, r25
    10e4:	87 fd       	sbrc	r24, 7
    10e6:	90 95       	com	r25
    10e8:	08 95       	ret

000010ea <_exit>:
    10ea:	f8 94       	cli

000010ec <__stop_program>:
    10ec:	ff cf       	rjmp	.-2      	; 0x10ec <__stop_program>
